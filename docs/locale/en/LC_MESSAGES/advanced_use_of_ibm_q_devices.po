# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../advanced_use_of_ibm_q_devices.rst:4
msgid "Advanced Use of IBM Q Devices"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:6
msgid ""
"In Qiskit we have an interface for backends and jobs that will be useful "
"for running circuits and extending to third-party backends. In this "
"section, we will review the core components of Qiskit’s base backend "
"framework, using the IBM Q provider as an example."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:10
msgid "The interface has three parts: the provider, the backend, and the job:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:12
msgid "provider: accesses backends and provides backend objects"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:13
msgid "backend: runs the quantum circuit"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:14
msgid "job: keeps track of the submitted job"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:17
msgid "The Provider"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:19
msgid ""
"The IBMQ Provider is an entity that provides access to a group of "
"different backends (for example, backends available through the IBM Q "
"Experience or IBM Q Network quantum cloud services)."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:23
msgid "The IBMQ provider inherits from BaseProvider and implements the methods:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:25
msgid "``backends()``: returns all backend objects known to the provider."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:26
msgid "``get_backend(name)``: returns the named backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:28
msgid ""
"The IBM Q provider has some extra functions for handling administrative "
"tasks. The credentials can be saved to disk or used in a session and "
"never saved."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:32
msgid "``enable_account(token, url)``: enable an account in the current session"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:34
msgid ""
"``disable_accounts(**kwargs)``: disable one or more accounts from current"
" session"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:36
msgid "``save_account(token, url)``: save an account to disk"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:37
msgid "``delete_accounts(**kwargs)``: delete the account or accounts from disk"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:39
msgid ""
"``load_accounts(**kwargs)``: load previously-saved account or accounts "
"into session"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:41
msgid "``active_accounts()``: list all accounts active in this session"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:42
msgid "``stored_accounts()``: list all accounts saved to disk"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:59
msgid ""
"Here we see that there are no backends. This is because no accounts have "
"been loaded."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:62
msgid ""
"Let’s start fresh and delete any accounts on disk. If no accounts are on "
"disk this will error"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:69
msgid "verify that there are no accounts stored now"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:84
msgid ""
"To demonstrate that we can load multiple accounts using the IBMQ "
"provider, here we use two files ``Qconfig_IBMQ_experience.py`` and "
"``Qconfig_IBMQ_network.py``, which are just containers of the "
"``APItoken`` and ``URL``."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:89
msgid "``APItoken = 'MY_API_TOKEN'``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:90
msgid "``URL = 'THE_URL'``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:92
msgid ""
"For the IBM Q experience the URL is not needed and is loaded by default "
"in ``enable_account`` and ``save_account``. For the IBM Q Network the url"
" is found on your q-console account page. We don’t recommend saving and "
"using files like this. We recommend just inputting the ``APItoken`` and "
"``URL`` directly into the methods ``enable_account`` and "
"``save_account``."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:104
msgid ""
"To enable an account (useful for one-off use, or if you don’t want to "
"save to disk)"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:111
msgid "To see that accounts which are enabled for use"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:118
msgid "and backends which are available"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:135
msgid "Disable that account (so we go back to no accounts active)"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:141
msgid "Now no backends are available"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:156
msgid ""
"Save two accounts: a public (IBM Q experience) and a premium (IBM Q "
"network)"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:164
msgid "Now they should show up as present on disk"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:171
msgid "but no account active in current session yet"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:186
msgid "so IBMQ can’t see any backends yet"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:201
msgid "now load up every account stored to disk"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:207
msgid "backends from two different accounts available for use"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:226
msgid ""
"now if you want to work with backends of a single account, you can do so "
"via account filtering"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:243
msgid "but you can also just disable account in the current session"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:249
msgid "so now only one account is active"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:256
msgid "and only that account’s backends are available"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:273
msgid ""
"or from the start use the filtering to just load up that account you’re "
"interested in"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:294
msgid "Filtering the backends"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:296
msgid ""
"You may also optionally filter the set of returned backends, by passing "
"arguments that query the backend’s ``configuration`` or ``status`` or "
"``properties``. The filters are passed by conditions and for more general"
" filters you can make advanced functions using the lambda function."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:302
msgid "As a first example: only return currently operational devices"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:318
msgid ""
"only return backends that are real devices, have more than 10 qubits and "
"are operational"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:335
msgid "Filter: show the least busy device (in terms of pending jobs in the queue)"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:355
msgid "The above filters can be combined as desired."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:357
msgid ""
"If you just want to get an instance of a particular backend, you can use "
"the ``get_backend()`` method."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:374
msgid "The Backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:376
msgid ""
"Backends represent either a simulator or a real quantum computer, and are"
" responsible for running quantum circuits and returning results. They "
"have a ``run`` method which takes in a ``qobj`` as input, which is a "
"quantum object and the result of the compilation process, and returns a "
"BaseJob object. This object allows asynchronous running of jobs for "
"retrieving results from a backend when the job is completed."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:383
msgid ""
"At a minimum, backends use the following methods, inherited from "
"BaseBackend:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:386
msgid "``provider`` - returns the provider of the backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:387
msgid "``name()`` - gets the name of the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:388
msgid "``status()`` - gets the status of the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:389
msgid "``configuration()`` - gets the configuration of the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:390
msgid "``properties()`` - gets the properties of the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:391
msgid "``run()`` - runs a qobj on the backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:393
msgid "For remote backends they must support the additional"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:395
msgid ""
"``jobs()`` - returns a list of previous jobs executed by this user on "
"this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:397
msgid "``retrieve_job()`` - returns a job by a job_id."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:399
msgid "In future updates they will introduce the following commands"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:401
msgid "``defaults()`` - gives a data structure of typical default parameters."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:403
msgid "``schema()`` - gets a schema for the backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:405
msgid "There are some IBMQ only functions"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:407
msgid "``hub`` - returns the IBMQ hub for this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:408
msgid "``group`` - returns the IBMQ group for this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:409
msgid "``project`` - returns the IBMQ project for this backend."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:415
msgid "Let’s start with the ``backend.provider``, which returns a provider object"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:431
msgid "Next is the ``name()``, which returns the name of the backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:446
msgid "Next let’s look at the ``status()``:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:466
msgid "The next is ``configuration()``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:481
msgid "The next is ``properties()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:496
msgid ""
"The next is ``hub``, ``group``, and ``project``. For the IBM Q experience"
" these will return ``None``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:511
msgid ""
"To see your last 5 jobs ran on the backend use the ``jobs()`` method of "
"that backend"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:529
msgid "Then the job can be retreived using ``retrieve_job(job_id())`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:536
msgid "The Job"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:538
msgid ""
"Job instances can be thought of as the “ticket” for a submitted job. They"
" find out the execution’s state at a given point in time (for example, if"
" the job is queued, running, or has failed) and also allow control over "
"the job. They have the following methods:"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:543
msgid "``status()`` - returns the status of the job."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:544
msgid "``backend()`` - returns the backend the job was run on."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:545
msgid "``job_id()`` - gets the job_id."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:546
msgid "``cancel()`` - cancels the job."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:547
msgid "``result()`` - gets the results from the circuit run."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:549
msgid "IBMQ only functions"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:551
msgid "``creation_date()`` - gives the date at which the job was created."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:552
msgid "``queue_position()`` - gives the position of the job in the queue."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:553
msgid "``error_message()`` - gives the error message of failed jobs."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:555
msgid ""
"Let’s start with the ``status()``. This returns the job status and a "
"message"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:571
msgid "To get a backend object from the job use the ``backend()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:587
msgid "To get the job_id use the ``job_id()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:602
msgid "To get the result from the job use the ``result()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:616
msgid "If you want to check the creation date use ``creation_date()``"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:631
msgid "Let’s make an active example"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:658
msgid ""
"To compile this circuit for the backend use the compile function. It will"
" make a qobj (quantum object) that can be run on the backend using the "
"``run(qobj)`` method."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:667
msgid "The status of this job can be checked with the ``status()`` method"
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:682
msgid ""
"If you made a mistake and need to cancel the job use the ``cancel()`` "
"method."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:701
msgid "The ``status()`` will show that the job cancelled."
msgstr ""

#: ../../advanced_use_of_ibm_q_devices.rst:716
msgid ""
"To rerun the job and set up a loop to check the status and queue position"
" you can use the ``queue_position()`` method."
msgstr ""

