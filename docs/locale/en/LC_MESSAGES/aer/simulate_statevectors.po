# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../aer/simulate_statevectors.rst:3
msgid "Find the Final Statevector of a Circuit"
msgstr ""

#: ../../aer/simulate_statevectors.rst:6
msgid "Introduction"
msgstr ""

#: ../../aer/simulate_statevectors.rst:8
msgid ""
"This tutorial shows how to use Qiskit Aerâ„¢ to find the final statevector "
"of quantum circuits."
msgstr ""

#: ../../aer/simulate_statevectors.rst:12
msgid "StatevectorSimulator"
msgstr ""

#: ../../aer/simulate_statevectors.rst:14
msgid ""
"The ``StatevectorSimulator`` executes a single shot of a Qiskit "
"``QuantumCircuit`` and returns the final quantum statevector of the "
"simulation. The circuit may contain *gates*, and also *measure*, *reset*,"
" and *conditional* operations."
msgstr ""

#: ../../aer/simulate_statevectors.rst:19
msgid "Import the ``StatevectorSimulator``."
msgstr ""

#: ../../aer/simulate_statevectors.rst:32
msgid "Simulating a quantum circuit"
msgstr ""

#: ../../aer/simulate_statevectors.rst:34
msgid ""
"The basic operation executes a quantum circuit and returns a counts "
"dictionary of measurement outcomes. Here we execute a simple circuit that"
" prepares a 2-qubit Bell-state :math:`|\\psi\\rangle = "
"\\frac{1}{2}(|0,0\\rangle + |1,1 \\rangle)` and measures both qubits."
msgstr ""

#: ../../aer/simulate_statevectors.rst:64
msgid "Simulating a quantum circuit with measurement"
msgstr ""

#: ../../aer/simulate_statevectors.rst:66
msgid ""
"Note that if a circuit contains *measure* or *reset* the final "
"statevector will be a conditional statevector *after* simulating wave-"
"function collapse to the outcome of a measure or reset. For the Bell-"
"state circuit this means the final statevector will be *either* "
":math:`|0,0\\rangle` *or* :math:`|1, 1\\rangle`."
msgstr ""

