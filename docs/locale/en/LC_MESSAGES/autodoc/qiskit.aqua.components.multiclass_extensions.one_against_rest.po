# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.components.multiclass_extensions.one_against_rest.rst:2
msgid "qiskit.aqua.components.multiclass\\_extensions.one\\_against\\_rest module"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest:1
msgid ""
"ベースクラス: "
":class:`qiskit.aqua.components.multiclass_extensions.multiclass_extension.MulticlassExtension`"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest:1
msgid "the multiclass extension based on the one-against-rest algorithm."
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.predict:1
msgid ""
"applying multiple estimators for prediction :param x: NxD array :type x: "
"numpy.ndarray"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.predict
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.test
msgid "戻り値"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.predict:5
msgid "predicted labels, Nx1 array"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.predict
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.test
msgid "戻り値の型"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.test:1
msgid ""
"testing multiple estimators each for distinguishing a pair of classes. "
":param x: input points :type x: numpy.ndarray :param y: input labels "
":type y: numpy.ndarray"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.test:7
msgid "accuracy"
msgstr ""

#: of
#: qiskit.aqua.components.multiclass_extensions.one_against_rest.OneAgainstRest.train:1
msgid ""
"training multiple estimators each for distinguishing a pair of classes. "
":param X: input points :type X: numpy.ndarray :param y: input labels "
":type y: numpy.ndarray"
msgstr ""

