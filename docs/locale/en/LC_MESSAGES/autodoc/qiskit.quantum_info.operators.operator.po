# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.quantum_info.operators.operator.rst:2
msgid "qiskit.quantum\\_info.operators.operator module"
msgstr ""

#: of qiskit.quantum_info.operators.operator:1
msgid "Matrix Operator class."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator:1
msgid "ベースクラス: :class:`qiskit.quantum_info.operators.base_operator.BaseOperator`"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator:1
msgid "Matrix operator class"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator:3
msgid ""
"This represents a matrix operator `M` that acts on a statevector as: "
"`M|v⟩` or on a density matrix as M.ρ.M^dagger."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add:1
#: qiskit.quantum_info.operators.operator.Operator.multiply:1
msgid "Return the operator self + other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add
#: qiskit.quantum_info.operators.operator.Operator.compose
#: qiskit.quantum_info.operators.operator.Operator.expand
#: qiskit.quantum_info.operators.operator.Operator.multiply
#: qiskit.quantum_info.operators.operator.Operator.power
#: qiskit.quantum_info.operators.operator.Operator.subtract
#: qiskit.quantum_info.operators.operator.Operator.tensor
msgid "パラメータ"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add:3
#: qiskit.quantum_info.operators.operator.Operator.compose:3
#: qiskit.quantum_info.operators.operator.Operator.expand:3
#: qiskit.quantum_info.operators.operator.Operator.subtract:3
msgid "an operator object."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add
#: qiskit.quantum_info.operators.operator.Operator.compose
#: qiskit.quantum_info.operators.operator.Operator.expand
#: qiskit.quantum_info.operators.operator.Operator.multiply
#: qiskit.quantum_info.operators.operator.Operator.power
#: qiskit.quantum_info.operators.operator.Operator.subtract
#: qiskit.quantum_info.operators.operator.Operator.tensor
msgid "戻り値"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add:6
msgid "the operator self + other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add
#: qiskit.quantum_info.operators.operator.Operator.compose
#: qiskit.quantum_info.operators.operator.Operator.expand
#: qiskit.quantum_info.operators.operator.Operator.multiply
#: qiskit.quantum_info.operators.operator.Operator.power
#: qiskit.quantum_info.operators.operator.Operator.subtract
#: qiskit.quantum_info.operators.operator.Operator.tensor
msgid "戻り値の型"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add
#: qiskit.quantum_info.operators.operator.Operator.compose
#: qiskit.quantum_info.operators.operator.Operator.expand
#: qiskit.quantum_info.operators.operator.Operator.multiply
#: qiskit.quantum_info.operators.operator.Operator.power
#: qiskit.quantum_info.operators.operator.Operator.subtract
#: qiskit.quantum_info.operators.operator.Operator.tensor
msgid "raises"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add:9
#: qiskit.quantum_info.operators.operator.Operator.subtract:9
msgid ":exc:`QiskitError` -- if other is not an operator, or has incompatible"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.add:10
#: qiskit.quantum_info.operators.operator.Operator.subtract:10
msgid ":exc:`dimensions.`"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.compose:1
msgid "Return the composition channel self∘other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.compose:5
msgid "a list of subsystem positions to compose other on."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.compose:7
msgid ""
"If False compose in standard order other(self(input)) otherwise compose "
"in reverse order self(other(input)) [default: False]"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.compose:12
msgid "The composed operator."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.compose:15
msgid ":exc:`QiskitError` -- if other cannot be converted to an Operator or has"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.compose:16
msgid "incompatible dimensions."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.conjugate:1
msgid "Return the conjugate of the operator."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.expand:1
msgid "Return the tensor product operator other ⊗ self."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.expand:6
msgid "the tensor product operator other ⊗ self."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.expand:9
#: qiskit.quantum_info.operators.operator.Operator.tensor:9
msgid ":exc:`QiskitError` -- if other cannot be converted to an operator."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.is_unitary:1
msgid "Return True if operator is a unitary matrix."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.multiply:3
msgid "a complex number."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.multiply:6
msgid "the operator other * self."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.multiply:9
msgid ":exc:`QiskitError` -- if other is not a valid complex number."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.power:1
msgid "Return the matrix power of the operator."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.power:3
msgid "the power to raise the matrix to."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.power:6
msgid "the n-times composed operator."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.power:9
msgid ":exc:`QiskitError` -- if the input and output dimensions of the operator"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.power:10
msgid "are not equal, or the power is not a positive integer."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.subtract:1
msgid "Return the operator self - other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.subtract:6
msgid "the operator self - other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.tensor:1
msgid "Return the tensor product operator self ⊗ other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.tensor:3
msgid "a operator subclass object."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.tensor:6
msgid "the tensor product operator self ⊗ other."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.to_instruction:1
msgid "Convert to a UnitaryGate instruction."
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.to_operator:1
msgid "Convert operator to matrix operator class"
msgstr ""

#: of qiskit.quantum_info.operators.operator.Operator.transpose:1
msgid "Return the transpose of the operator."
msgstr ""

