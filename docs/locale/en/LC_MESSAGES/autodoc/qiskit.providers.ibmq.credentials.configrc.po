# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.providers.ibmq.credentials.configrc.rst:2
msgid "qiskit.providers.ibmq.credentials.configrc module"
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc:1
msgid "Utilities for reading and writing credentials from and to config files."
msgstr ""

#: of
#: qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc:1
msgid "Read a configuration file and return a dict with its sections."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc
#: qiskit.providers.ibmq.credentials.configrc.remove_credentials
#: qiskit.providers.ibmq.credentials.configrc.store_credentials
#: qiskit.providers.ibmq.credentials.configrc.write_qiskit_rc
msgid "パラメータ"
msgstr ""

#: of
#: qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc:3
#: qiskit.providers.ibmq.credentials.configrc.remove_credentials:5
#: qiskit.providers.ibmq.credentials.configrc.store_credentials:7
#: qiskit.providers.ibmq.credentials.configrc.write_qiskit_rc:8
msgid ""
"full path to the qiskitrc file. If `None`, the default location is used "
"(`HOME/.qiskit/qiskitrc`)."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc
msgid "戻り値"
msgstr ""

#: of
#: qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc:7
msgid ""
"dictionary with the contents of the configuration file, with     the "
"form::      {credential_unique_id: Credentials}"
msgstr ""

#: of
#: qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc:11
msgid "dictionary with the contents of the configuration file, with"
msgstr ""

#: of
#: qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc:10
msgid "the form::"
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc
msgid "戻り値の型"
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc
#: qiskit.providers.ibmq.credentials.configrc.remove_credentials
msgid "raises"
msgstr ""

#: of
#: qiskit.providers.ibmq.credentials.configrc.read_credentials_from_qiskitrc:15
msgid ""
":exc:`CredentialsError` -- if the file was not parseable. Please note "
"that this exception is not raised if the file does not exist (instead, an"
" empty dict is returned)."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.remove_credentials:1
msgid "Remove credentials from qiskitrc."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.remove_credentials:3
msgid "credentials."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.remove_credentials:9
msgid ""
":exc:`CredentialsError` -- If there is no account with that name on the "
"configuration file."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.store_credentials:1
msgid "Store the credentials for a single account in the configuration file."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.store_credentials:3
msgid "credentials instance."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.store_credentials:5
msgid "overwrite existing credentials."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.write_qiskit_rc:1
msgid "Write credentials to the configuration file."
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.write_qiskit_rc:3
msgid ""
"dictionary with the credentials, with the form::          "
"{credentials_unique_id: Credentials}"
msgstr ""

#: of qiskit.providers.ibmq.credentials.configrc.write_qiskit_rc:4
msgid "dictionary with the credentials, with the form::"
msgstr ""

