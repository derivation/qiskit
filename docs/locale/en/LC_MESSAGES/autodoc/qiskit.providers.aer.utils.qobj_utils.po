# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.providers.aer.utils.qobj_utils.rst:2
msgid "qiskit.providers.aer.utils.qobj\\_utils module"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils:1
msgid ""
"Temporary hacks for qobj until Terra supports Aer instructions (likely "
"0.8)"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils:3
msgid ""
"THESE SHOULD ONLY BE USED UNTIL A PROPER QUANTUM CIRCUIT INTERFACE IS "
"ADDED TO QISKIT TERRA. THEY WILL NOT BE SUPPORTED AFTER THAT."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.append_instr:1
msgid "Append a QasmQobjInstruction to a QobjExperiment."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.append_instr
#: qiskit.providers.aer.utils.qobj_utils.get_instr_pos
#: qiskit.providers.aer.utils.qobj_utils.insert_instr
#: qiskit.providers.aer.utils.qobj_utils.insert_snapshots_after_barriers
#: qiskit.providers.aer.utils.qobj_utils.snapshot_instr
#: qiskit.providers.aer.utils.qobj_utils.unitary_instr
msgid "パラメータ"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.append_instr:3
msgid "a Qobj object."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.append_instr:5
#: qiskit.providers.aer.utils.qobj_utils.insert_instr:5
msgid "The index of the experiment in the qobj."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.append_instr:7
#: qiskit.providers.aer.utils.qobj_utils.insert_instr:7
msgid "instruction to insert."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.barrier_instr:1
#: qiskit.providers.aer.utils.qobj_utils.iden_instr:1
msgid "Create a barrier QasmQobjInstruction."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos:1
msgid "Return all locations of QasmQobjInstruction in a Qobj experiment."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos:3
msgid ""
"The return list is sorted in reverse order so iterating over it to insert"
" new items will work as expected."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos:6
#: qiskit.providers.aer.utils.qobj_utils.insert_instr:3
msgid "a Qobj object"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos:8
msgid "The index of the experiment in the qobj"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos:10
msgid "QasmQobjInstruction name to find"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos
#: qiskit.providers.aer.utils.qobj_utils.snapshot_instr
#: qiskit.providers.aer.utils.qobj_utils.unitary_instr
msgid "戻り値"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos:13
msgid "A list of positions where the QasmQobjInstruction is located."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.get_instr_pos
#: qiskit.providers.aer.utils.qobj_utils.snapshot_instr
#: qiskit.providers.aer.utils.qobj_utils.unitary_instr
msgid "戻り値の型"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_instr:1
msgid "Insert a QasmQobjInstruction into a QobjExperiment."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_instr:9
msgid "the position to insert the item."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_snapshots_after_barriers:1
msgid "Insert a snapshot instruction after each barrier in qobj."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_snapshots_after_barriers:3
msgid ""
"The label of the input snapshot will be appended with \"i\" where \"i\" "
"ranges from 0 to the 1 - number of barriers."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_snapshots_after_barriers:6
msgid "a qobj to insert snapshots into"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_snapshots_after_barriers:8
msgid "a snapshot instruction."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.insert_snapshots_after_barriers:11
#: qiskit.providers.aer.utils.qobj_utils.snapshot_instr:38
#: qiskit.providers.aer.utils.qobj_utils.unitary_instr:15
msgid "Additional Information:"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.measure_instr:1
msgid "Create a multi-qubit measure instruction"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.reset_instr:1
msgid "Create a multi-qubit reset instruction"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:1
msgid "Create a snapshot qobj item."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:3
msgid "the snapshot type identifier"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:5
msgid "the snapshot label string"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:7
msgid "qubits snapshot applies to (optional)"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:9
msgid ""
"optional parameters for special snapshot types. See additional "
"information."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:13
msgid "The qobj item for the snapshot instruction."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:30
msgid "Snapshot types:"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:18
msgid ""
"\"statevector\" -- returns the current statevector for each shot "
"\"memory\" -- returns the current memory hex-string for each shot "
"\"register\" -- returns the current register hex-string for each shot "
"\"probabilities\" -- returns the measurement outcome probabilities"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:22
msgid ""
"averaged over all shots, but conditioned on the current memory value. "
"This requires the qubits field to be set."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:28
msgid "\"expval_pauli\" -- returns the expectation value of an operator"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:26
msgid ""
"averaged over all shots, but conditioned on the current memory value. "
"This requires the qubits field to be set and the params field to be set."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:30
msgid "\"expval_matrix\" -- same as expval_pauli but with different params"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:36
msgid "Pauli expectation value params:"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:33
msgid ""
"These are a list of terms [complex_coeff, pauli_str] where string is in "
"little endian: pauli_str CBA applies Pauli A to qubits[0], B to qubits[1]"
" and C to qubits[2]. Example for op 0.5 XX + 0.7 IZ we have [[0.5, 'XX'],"
" [0.7, 'IZ']]"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:38
msgid "Matrix expectation value params:"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.snapshot_instr:39
msgid "TODO"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:1
msgid "Create a unitary gate QasmQobjInstruction."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:3
msgid "an n-qubit unitary matrix"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:5
msgid "qubits to apply the matrix to."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:7
msgid "optional string label for the untiary matrix"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:10
msgid "The qobj item for the unitary instruction."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr
msgid "raises"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:13
msgid ":exc:`ValueError` -- if the input matrix is not unitary"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:21
msgid "Qubit Ordering:"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:18
msgid ""
"The n-qubit matrix is ordered in little-endian with respect to the qubits"
" in the label string. For example. If M is a tensor product of single "
"qubit matrices `M = kron(M_(n-1), ..., M_1, M_0)` then `M_0` is applied "
"to `qubits[0]`, `M_1` to `qubits[1]` etc."
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:25
msgid "Label string:"
msgstr ""

#: of qiskit.providers.aer.utils.qobj_utils.unitary_instr:24
msgid ""
"The string label is used for identifying the matrix in a noise model so "
"that noise may be applied to the implementation of this matrix."
msgstr ""

