# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.components.neural_networks.quantum_generator.rst:2
msgid "qiskit.aqua.components.neural\\_networks.quantum\\_generator module"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator:1
msgid ""
"ベースクラス: "
":class:`qiskit.aqua.components.neural_networks.generative_network.GenerativeNetwork`"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator:1
msgid "Generator"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.construct_circuit:1
msgid ""
"Construct generator circuit. :param quantum_instance: QuantumInstance, "
"used for running the generator circuit :param params: array or None, "
"parameters which should be used to run the generator, if None use "
"self._params"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.construct_circuit:5
msgid "Returns: QuantumCircuit, constructed quantum circuit"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.get_output:1
msgid ""
"Get data samples from the generator. :param quantum_instance: "
"QuantumInstance, used to run the generator circuit. :param params: array "
"or None, parameters which should be used to run the generator, if None "
"use self._params :param shots: int, if not None use a number of shots "
"that is different from the number set in quantum_instance"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.get_output:6
msgid "Returns: array: generated samples, array: sample occurence in percentage"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.init_params:1
msgid "Initialize via parameters dictionary and algorithm input instance."
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.init_params
msgid "パラメータ"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.init_params:3
msgid "parameters dictionary"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.init_params:5
msgid "QuantumGenerator: vqe object"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.loss:1
msgid ""
"Loss function :param x: array, sample label (equivalent to discriminator "
"output) :param weights: array, probability for measuring the sample"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.loss:5
msgid "Returns:  float, loss function"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.set_discriminator:1
msgid ""
"Set discriminator :param discriminator: Discriminator, Discriminator used"
" to compute the loss function."
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.set_seed:1
msgid "Set seed. :param seed: int, seed"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.set_seed:4
msgid "Returns:"
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.train:1
msgid ""
"Perform one training step w.r.t to the generator's parameters :param "
"quantum_instance: QuantumInstance, used to run the generator circuit. "
":param shots: int, Number of shots for hardware or qasm execution."
msgstr ""

#: of
#: qiskit.aqua.components.neural_networks.quantum_generator.QuantumGenerator.train:5
msgid "Returns: dict, generator loss(float) and updated parameters (array)."
msgstr ""

