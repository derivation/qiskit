# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.visualization.text.rst:2
msgid "qiskit.visualization.text module"
msgstr ""

#: of qiskit.visualization.text:1
msgid ""
"A module for drawing circuits in ascii art or some other text "
"representation"
msgstr ""

#: of qiskit.visualization.text.Barrier:1 qiskit.visualization.text.Bullet:1
#: qiskit.visualization.text.Ex:1 qiskit.visualization.text.Reset:1
msgid "ベースクラス: :class:`qiskit.visualization.text.DirectOnQuWire`"
msgstr ""

#: of qiskit.visualization.text.Barrier:1
msgid "Draws a barrier. top:  ░     ░ mid: ─░─ ───░─── bot:  ░     ░"
msgstr ""

#: of qiskit.visualization.text.BoxOnClWire:1
#: qiskit.visualization.text.BoxOnQuWire:1
#: qiskit.visualization.text.BreakWire:1
#: qiskit.visualization.text.DirectOnQuWire:1
#: qiskit.visualization.text.EmptyWire:1 qiskit.visualization.text.InputWire:1
#: qiskit.visualization.text.MeasureTo:1 qiskit.visualization.text.MultiBox:1
msgid "ベースクラス: :class:`qiskit.visualization.text.DrawElement`"
msgstr ""

#: of qiskit.visualization.text.BoxOnClWire:1
msgid ""
"Draws a box on the classical wire top: ┌───┐   ┌───┐ mid: ╡ A ╞ ══╡ A ╞══"
" bot: └───┘   └───┘"
msgstr ""

#: of qiskit.visualization.text.BoxOnClWireBot:1
#: qiskit.visualization.text.BoxOnClWireMid:1
#: qiskit.visualization.text.BoxOnClWireTop:1
msgid ""
"ベースクラス: :class:`qiskit.visualization.text.MultiBox`, "
":class:`qiskit.visualization.text.BoxOnClWire`"
msgstr ""

#: of qiskit.visualization.text.BoxOnClWireBot:1
msgid ""
"Draws the bottom part of a conditional box that affects more than one "
"classical wire"
msgstr ""

#: of qiskit.visualization.text.BoxOnClWireMid:1
msgid ""
"Draws the middle part of a conditional box that affects more than one "
"classical wire"
msgstr ""

#: of qiskit.visualization.text.BoxOnClWireTop:1
msgid ""
"Draws the top part of a conditional box that affects more than one "
"classical wire"
msgstr ""

#: of qiskit.visualization.text.BoxOnQuWire:1
msgid ""
"Draws a box on the quantum wire top: ┌───┐   ┌───┐ mid: ┤ A ├ ──┤ A ├── "
"bot: └───┘   └───┘"
msgstr ""

#: of qiskit.visualization.text.BoxOnQuWireBot:1
#: qiskit.visualization.text.BoxOnQuWireMid:1
#: qiskit.visualization.text.BoxOnQuWireTop:1
msgid ""
"ベースクラス: :class:`qiskit.visualization.text.MultiBox`, "
":class:`qiskit.visualization.text.BoxOnQuWire`"
msgstr ""

#: of qiskit.visualization.text.BoxOnQuWireBot:1
msgid "Draws the bottom part of a box that affects more than one quantum wire"
msgstr ""

#: of qiskit.visualization.text.BoxOnQuWireMid:1
msgid "Draws the middle part of a box that affects more than one quantum wire"
msgstr ""

#: of qiskit.visualization.text.BoxOnQuWireTop:1
msgid "Draws the top part of a box that affects more than one quantum wire"
msgstr ""

#: of qiskit.visualization.text.BreakWire:1
msgid "This element is used to break the drawing in several pages."
msgstr ""

#: of qiskit.visualization.text.BreakWire.fillup_layer:1
msgid ""
"Creates a layer with BreakWire elements. :param layer_length: The length "
"of the layer to create :type layer_length: int :param arrow_char: The "
"char used to create the BreakWire element. :type arrow_char: char"
msgstr ""

#: of qiskit.visualization.text.BreakWire.fillup_layer
#: qiskit.visualization.text.EmptyWire.fillup_layer
#: qiskit.visualization.text.InputWire.fillup_layer
#: qiskit.visualization.text.TextDrawing.draw_wires
#: qiskit.visualization.text.TextDrawing.lines
#: qiskit.visualization.text.TextDrawing.merge_lines
#: qiskit.visualization.text.TextDrawing.wire_names
msgid "戻り値"
msgstr ""

#: of qiskit.visualization.text.BreakWire.fillup_layer:7
msgid "The new layer."
msgstr ""

#: of qiskit.visualization.text.BreakWire.fillup_layer
#: qiskit.visualization.text.EmptyWire.fillup_layer
#: qiskit.visualization.text.InputWire.fillup_layer
#: qiskit.visualization.text.TextDrawing.draw_wires
#: qiskit.visualization.text.TextDrawing.lines
#: qiskit.visualization.text.TextDrawing.merge_lines
#: qiskit.visualization.text.TextDrawing.wire_names
msgid "戻り値の型"
msgstr ""

#: of qiskit.visualization.text.Bullet:1
msgid ""
"Draws a bullet (usually with a connector). E.g. the top part of a CX "
"gate. top: mid: ─■─  ───■─── bot:  │      │"
msgstr ""

#: of qiskit.visualization.text.DirectOnQuWire:1
msgid "Element to the wire (without the box)."
msgstr ""

#: of qiskit.visualization.text.DrawElement:1 qiskit.visualization.text.Layer:1
#: qiskit.visualization.text.TextDrawing:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.visualization.text.DrawElement:1
msgid "An element is an instruction or an operation that need to be drawn."
msgstr ""

#: of qiskit.visualization.text.DrawElement.bot:1
msgid "Constructs the bottom line of the element"
msgstr ""

#: of qiskit.visualization.text.DrawElement.connect:1
msgid ""
"Connects boxes and elements using wire_char and setting proper "
"connectors. :param wire_char: For example '║' or '│'. :type wire_char: "
"char :param where: Where the connector should be set. :type where: "
"list[\"top\", \"bot\"] :param label: Some connectors have a label (see "
"cu1, for example). :type label: string"
msgstr ""

#: of qiskit.visualization.text.DrawElement.length:1
msgid "Returns the length of the element, including the box around."
msgstr ""

#: of qiskit.visualization.text.DrawElement.mid:1
msgid "Constructs the middle line of the element"
msgstr ""

#: of qiskit.visualization.text.DrawElement.top:1
msgid "Constructs the top line of the element"
msgstr ""

#: of qiskit.visualization.text.DrawElement.width:1
#: qiskit.visualization.text.MultiBox.width:1
msgid "Returns the width of the label, including padding"
msgstr ""

#: of qiskit.visualization.text.EmptyWire:1
msgid "This element is just the wire, with no instructions nor operations."
msgstr ""

#: of qiskit.visualization.text.EmptyWire.fillup_layer:1
msgid ""
"Given a layer, replace the Nones in it with EmptyWire elements. :param "
"layer: The layer that contains Nones. :type layer: list :param "
"first_clbit: The first wire that is classic. :type first_clbit: int"
msgstr ""

#: of qiskit.visualization.text.EmptyWire.fillup_layer:7
msgid "The new layer, with no Nones."
msgstr ""

#: of qiskit.visualization.text.Ex:1
msgid ""
"Draws an X (usually with a connector). E.g. the top part of a swap gate "
"top: mid: ─X─ ───X─── bot:  │     │"
msgstr ""

#: of qiskit.visualization.text.InputWire:1
msgid "This element is the label and the initial value of a wire."
msgstr ""

#: of qiskit.visualization.text.InputWire.fillup_layer:1
msgid ""
"Creates a layer with InputWire elements. :param names: List of names for "
"the wires. :type names: list"
msgstr ""

#: of qiskit.visualization.text.InputWire.fillup_layer:5
msgid "The new layer"
msgstr ""

#: of qiskit.visualization.text.Layer:1
msgid "A layer is the \"column\" of the circuit."
msgstr ""

#: of qiskit.visualization.text.Layer.connect_with:1
msgid ""
"Connects the elements in the layer using wire_char. :param wire_char: For"
" example '║' or '│'. :type wire_char: char"
msgstr ""

#: of qiskit.visualization.text.Layer.full_layer:1
msgid ""
"Returns the composition of qubits and classic wires. :returns: "
"self.qubit_layer + self.clbit_layer :rtype: String"
msgstr ""

#: of qiskit.visualization.text.Layer.set_cl_multibox:1
msgid ""
"Sets the multi clbit box. :param creg: The affected classical register. "
":type creg: string :param label: The label for the multi clbit box. :type"
" label: string :param top_connect: The char to connect the box on the "
"top. :type top_connect: char"
msgstr ""

#: of qiskit.visualization.text.Layer.set_clbit:1
msgid ""
"Sets the clbit to the element :param clbit: Element of self.cregs. :type "
"clbit: cbit :param element: Element to set in the clbit :type element: "
"DrawElement"
msgstr ""

#: of qiskit.visualization.text.Layer.set_qu_multibox:1
msgid ""
"Sets the multi qubit box. :param bits: A list of affected bits. :type "
"bits: list[int] :param label: The label for the multi qubit box. :type "
"label: string"
msgstr ""

#: of qiskit.visualization.text.Layer.set_qubit:1
msgid ""
"Sets the qubit to the element :param qubit: Element of self.qregs. :type "
"qubit: qbit :param element: Element to set in the qubit :type element: "
"DrawElement"
msgstr ""

#: of qiskit.visualization.text.MeasureFrom:1
msgid "ベースクラス: :class:`qiskit.visualization.text.BoxOnQuWire`"
msgstr ""

#: of qiskit.visualization.text.MeasureFrom:1
msgid ""
"The element on the quantum wire in which the measure is performed top: "
"┌─┐    ┌─┐ mid: ┤M├ ───┤M├─── bot: └╥┘    └╥┘"
msgstr ""

#: of qiskit.visualization.text.MeasureTo:1
msgid ""
"The element on the classic wire to which the measure is performed top:  ║"
"     ║ mid: ═╩═ ═══╩═══ bot:"
msgstr ""

#: of qiskit.visualization.text.MultiBox:1
msgid "Elements that is draw on over multiple wires."
msgstr ""

#: of qiskit.visualization.text.MultiBox.center_label:1
msgid ""
"In multi-bit elements, the label is centered vertically. :param "
"input_length: Rhe amount of wires affected. :type input_length: int "
":param order: Which middle element is this one? :type order: int"
msgstr ""

#: of qiskit.visualization.text.Reset:1
msgid "Draws a reset gate"
msgstr ""

#: of qiskit.visualization.text.TextDrawing:1
msgid "The text drawing"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.build_layers:1
msgid "Constructs layers. :returns: List of DrawElements. :rtype: list"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.build_layers
msgid "raises"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.build_layers:5
msgid ""
":exc:`VisualizationError` -- When the drawing is, for some reason, "
"impossible to be drawn."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.draw_wires:1
msgid ""
"Given a list of wires, creates a list of lines with the text drawing. "
":param wires: A list of wires with instructions. :type wires: list :param"
" vertically_compressed: Default is `True`. It merges the lines"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.draw_wires:5
msgid "so the drawing will take less vertical room."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.draw_wires:8
#: qiskit.visualization.text.TextDrawing.lines:9
msgid "A list of lines with the text drawing."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.dump:1
msgid ""
"Dumps the ascii art in the file. :param filename: File to dump the ascii "
"art. :type filename: str :param encoding: Optional. Default \"utf-8\". "
":type encoding: str"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.label_for_box:1
msgid "Creates the label for a box."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.label_for_conditional:1
msgid "Creates the label for a conditional instruction."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.lines:1
msgid ""
"Generates a list with lines. These lines form the text drawing. :param "
"line_length: Optional. Breaks the circuit drawing to this length. This"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.lines:3
msgid ""
"useful when the drawing does not fit in the console. If None (default), "
"it will try to guess the console width using shutil.get_terminal_size(). "
"If you don't want pagination at all, set line_length=-1."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.merge_lines:1
msgid ""
"Merges two lines (top and bot) in the way that the overlapping make "
"senses. :param top: the top line :type top: str :param bot: the bottom "
"line :type bot: str :param icod: in case of doubt, which line should have"
" priority? Default: \"top\". :type icod: top or bot"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.merge_lines:9
msgid "The merge of both lines."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.normalize_width:1
msgid ""
"When the elements of the layer have different widths, sets the width to "
"the max elements. :param layer: A list of elements. :type layer: list"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.params_for_label:1
msgid ""
"Get the params and format them to add them to a label. None if there are "
"no params of if the params are numpy.ndarrays."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.single_string:1
msgid "Creates a long string with the ascii art Returns:"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.single_string:3
msgid "str: The lines joined by '"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.single_string:4
msgid "'"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.wire_names:1
msgid ""
"Returns a list of names for each wire. :param with_initial_value: "
"Optional (Default: True). If true, adds the initial value to"
msgstr ""

#: of qiskit.visualization.text.TextDrawing.wire_names:3
msgid "the name."
msgstr ""

#: of qiskit.visualization.text.TextDrawing.wire_names:6
msgid "The list of wire names."
msgstr ""

