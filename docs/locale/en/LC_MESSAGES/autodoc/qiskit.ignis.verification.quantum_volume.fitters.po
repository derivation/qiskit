# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.ignis.verification.quantum_volume.fitters.rst:2
msgid "qiskit.ignis.verification.quantum\\_volume.fitters module"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters:1
msgid "Functions used for the analysis of quantum volume results."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters:3
msgid ""
"Based on Cross et al. \"Validating quantum computers using randomized "
"model circuits\", arXiv:1811.12926"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter:1
msgid "Class for fitters for quantum volume"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_data:1
msgid "Add a new result. Re calculate fit"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_data
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_statevectors
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data
msgid "パラメータ"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_data:3
msgid "list of qv results"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_data:4
msgid "re caculate the means and fit the result"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_data:7
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.calc_data:7
msgid "Additional information:"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_data:7
msgid ""
"Assumes that 'result' was executed is the output of circuits generated by"
" qv_circuits,"
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_statevectors:1
msgid ""
"Add the ideal results and convert to the heavy outputs Assume the result "
"is from 'statevector_simulator'"
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.add_statevectors:4
msgid "ideal results"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.calc_data:1
msgid "Make a count dictionary for each unique circuit from all the results."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.calc_data:4
msgid "Calculate the heavy output probability"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.calc_data:7
msgid ""
"Assumes that 'result' was executed is the output of circuits generated by"
" qv_ciruits,"
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.calc_statistics:1
msgid ""
"Convert the heavy outputs in the different trials into mean and error for"
" plotting"
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.calc_statistics:4
msgid "Here we assume the error is due to a binomial distribution"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.depths:1
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.qubit_lists:1
msgid "Return depth list."
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.heavy_output_counts:1
msgid "Return the number of heavy output counts as measured."
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.heavy_output_prob_ideal:1
msgid "Return the heavy output probability ideally."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.heavy_outputs:1
msgid "Return the ideal heavy outputs dictionary."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data:1
msgid "Plot the qv data as a function of depth"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data:3
msgid "plot axis (if passed in)."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data:5
msgid "Add an EPC label"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data:7
msgid "display the plot."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data
msgid "raises"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.plot_qv_data:10
msgid ":exc:`ImportError` -- If matplotlib is not installed."
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.quantum_volume:1
msgid "Return the volume for each depth."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.quantum_volume
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.qv_success
msgid "戻り値"
msgstr ""

#: of
#: qiskit.ignis.verification.quantum_volume.fitters.QVFitter.quantum_volume:3
msgid "List of quantum volumes"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.qv_success:1
msgid ""
"Return whether each depth was successful (>2/3 with confidence greater "
"than 97.5) and the confidence"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.qv_success:4
msgid ""
"List of lenth depth with eact element a 3 list with - success True/False "
"- confidence"
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.results:1
msgid "Return all the results."
msgstr ""

#: of qiskit.ignis.verification.quantum_volume.fitters.QVFitter.ydata:1
msgid "Return the average and std of the output probability."
msgstr ""

