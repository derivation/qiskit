# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.providers.aer.noise.errors.quantum_error.rst:2
msgid "qiskit.providers.aer.noise.errors.quantum\\_error module"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error:1
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError:1
msgid "Quantum error class for Qiskit Aer noise model"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError:7
msgid "WARNING: The init interface for this class is not finalized and may"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError:4
msgid ""
"change in future releases. For maximum backwards compatibility use the "
"QuantumError generating functions in the `noise.errors` module."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.as_dict:1
msgid "Return the current error as a dictionary."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.atol:1
msgid "The absolute tolerence parameter for float comparisons."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.circuits:1
msgid "Return the list of error circuits."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose:1
msgid "Return the composition error channel self∘other."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor
msgid "パラメータ"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose:3
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand:3
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor:3
msgid "a quantum error channel."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose:5
msgid ""
"If False compose in standard order other(self(input)) otherwise compose "
"in reverse order self(other(input)) [default: False]"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor
msgid "戻り値"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose:10
msgid "The composition error channel."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor
msgid "戻り値の型"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor
msgid "raises"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose:13
msgid ":exc:`NoiseError` -- if other cannot be converted into a QuantumError,"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.compose:14
msgid "or has incompatible dimensions."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.copy:1
msgid "Make a copy of current QuantumError."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term:1
msgid "Return a single term from the error."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term:3
msgid "the position of the error term."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term:6
msgid ""
"A pair `(p, circuit)` for error term at `position` < size where `p` is "
"the probability of the error term, and `circuit` is the list of qobj "
"instructions for the error term."
msgstr ""

#: of
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term:11
msgid ":exc:`NoiseError` -- If the position is greater than the size of"
msgstr ""

#: of
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.error_term:12
msgid "the quantum error."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand:1
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron:1
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor:1
msgid "Return the tensor product quantum error channel self ⊗ other."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand:6
msgid "the tensor product error channel other ⊗ self."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.expand:9
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor:9
msgid ":exc:`NoiseError` -- if other cannot be converted to a QuantumError."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.ideal:1
msgid "Return True if current error object is an identity"
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron:3
msgid "DEPRECIATED: use QuantumError.tensor instead."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron:5
msgid "a quantum error or channel."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.kron:8
msgid "the tensor product channel self ⊗ other."
msgstr ""

#: of
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.number_of_qubits:1
msgid "Return the number of qubits for the error."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power:1
msgid "Return the compose of a error channel with itself n times."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power:3
msgid "the number of times to compose with self (n>0)."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power:6
msgid "the n-times composition error channel."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.power:9
msgid ":exc:`NoiseError` -- if the power is not a positive integer."
msgstr ""

#: of
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.probabilities:1
msgid "Return the list of error probabilities."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.rtol:1
msgid "The relative tolerence parameter for float comparisons."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.size:1
msgid "Return the number of error circuit."
msgstr ""

#: of qiskit.providers.aer.noise.errors.quantum_error.QuantumError.tensor:6
msgid "the tensor product error channel self ⊗ other."
msgstr ""

#: of
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.to_instruction:1
msgid "Convet the QuantumError to a circuit Instruction."
msgstr ""

#: of
#: qiskit.providers.aer.noise.errors.quantum_error.QuantumError.to_quantumchannel:1
msgid "Convet the QuantumError to a SuperOp quantum channel."
msgstr ""

