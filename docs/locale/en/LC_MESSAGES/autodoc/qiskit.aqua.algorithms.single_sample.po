# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.algorithms.single_sample.rst:2
msgid "qiskit.aqua.algorithms.single\\_sample package"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.AmplitudeEstimation:1
#: qiskit.aqua.algorithms.single_sample.BernsteinVazirani:1
#: qiskit.aqua.algorithms.single_sample.DeutschJozsa:1
#: qiskit.aqua.algorithms.single_sample.Grover:1
#: qiskit.aqua.algorithms.single_sample.HHL:1
#: qiskit.aqua.algorithms.single_sample.IQPE:1
#: qiskit.aqua.algorithms.single_sample.QPE:1
#: qiskit.aqua.algorithms.single_sample.Shor:1
#: qiskit.aqua.algorithms.single_sample.Simon:1
msgid "ベースクラス: :class:`qiskit.aqua.algorithms.quantum_algorithm.QuantumAlgorithm`"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Grover:1
msgid "The Grover's Search algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Grover:3
msgid ""
"If the `num_iterations` param is specified, the amplitude amplification "
"iteration will be built as specified."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Grover:5
msgid ""
"If the `incremental` mode is specified, which indicates that the optimal "
"`num_iterations` isn't known in advance, a multi-round schedule will be "
"followed with incremental trial `num_iterations` values. The "
"implementation follows Section 4 of Boyer et al. <https://arxiv.org/abs"
"/quant-ph/9605034>"
msgstr ""

#: of
#: qiskit.aqua.algorithms.single_sample.BernsteinVazirani.construct_circuit:1
#: qiskit.aqua.algorithms.single_sample.DeutschJozsa.construct_circuit:1
#: qiskit.aqua.algorithms.single_sample.Grover.construct_circuit:1
#: qiskit.aqua.algorithms.single_sample.Simon.construct_circuit:1
msgid "Construct the quantum circuit"
msgstr ""

#: of
#: qiskit.aqua.algorithms.single_sample.AmplitudeEstimation.construct_circuit
#: qiskit.aqua.algorithms.single_sample.BernsteinVazirani.construct_circuit
#: qiskit.aqua.algorithms.single_sample.DeutschJozsa.construct_circuit
#: qiskit.aqua.algorithms.single_sample.Grover.construct_circuit
#: qiskit.aqua.algorithms.single_sample.HHL.construct_circuit
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim
#: qiskit.aqua.algorithms.single_sample.HHL.init_params
#: qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit
#: qiskit.aqua.algorithms.single_sample.IQPE.init_params
#: qiskit.aqua.algorithms.single_sample.QPE.construct_circuit
#: qiskit.aqua.algorithms.single_sample.QPE.init_params
#: qiskit.aqua.algorithms.single_sample.Shor.construct_circuit
#: qiskit.aqua.algorithms.single_sample.Shor.init_params
#: qiskit.aqua.algorithms.single_sample.Simon.construct_circuit
msgid "パラメータ"
msgstr ""

#: of
#: qiskit.aqua.algorithms.single_sample.AmplitudeEstimation.construct_circuit:3
#: qiskit.aqua.algorithms.single_sample.BernsteinVazirani.construct_circuit:3
#: qiskit.aqua.algorithms.single_sample.DeutschJozsa.construct_circuit:3
#: qiskit.aqua.algorithms.single_sample.Grover.construct_circuit:3
#: qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit:9
#: qiskit.aqua.algorithms.single_sample.QPE.construct_circuit:3
#: qiskit.aqua.algorithms.single_sample.Shor.construct_circuit:3
#: qiskit.aqua.algorithms.single_sample.Simon.construct_circuit:3
msgid "Boolean flag to indicate if measurement should be included in the circuit."
msgstr ""

#: of
#: qiskit.aqua.algorithms.single_sample.AmplitudeEstimation.construct_circuit
#: qiskit.aqua.algorithms.single_sample.BernsteinVazirani.construct_circuit
#: qiskit.aqua.algorithms.single_sample.DeutschJozsa.construct_circuit
#: qiskit.aqua.algorithms.single_sample.Grover.construct_circuit
#: qiskit.aqua.algorithms.single_sample.HHL.construct_circuit
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim
#: qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit
#: qiskit.aqua.algorithms.single_sample.QPE.construct_circuit
#: qiskit.aqua.algorithms.single_sample.Shor.construct_circuit
#: qiskit.aqua.algorithms.single_sample.Simon.construct_circuit
msgid "戻り値"
msgstr ""

#: of
#: qiskit.aqua.algorithms.single_sample.AmplitudeEstimation.construct_circuit:6
#: qiskit.aqua.algorithms.single_sample.BernsteinVazirani.construct_circuit:6
#: qiskit.aqua.algorithms.single_sample.DeutschJozsa.construct_circuit:6
#: qiskit.aqua.algorithms.single_sample.Grover.construct_circuit:6
#: qiskit.aqua.algorithms.single_sample.HHL.construct_circuit:7
#: qiskit.aqua.algorithms.single_sample.Simon.construct_circuit:6
msgid "the QuantumCircuit object for the constructed circuit"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Grover.init_params:1
msgid ""
"Initialize via parameters dictionary and algorithm input instance :param "
"params: parameters dictionary :param algo_input: input instance"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE:1
msgid "The Iterative Quantum Phase Estimation algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE:3
msgid "See https://arxiv.org/abs/quant-ph/0610214"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit:1
msgid "Construct the kth iteration Quantum Phase Estimation circuit."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit:3
msgid ""
"For details of parameters, please see Fig. 2 in https://arxiv.org/pdf"
"/quant-ph/0610214.pdf."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit:5
msgid "the iteration idx."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit:7
msgid "the feedback angle."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit:12
msgid "the quantum circuit per iteration"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim
#: qiskit.aqua.algorithms.single_sample.IQPE.construct_circuit
#: qiskit.aqua.algorithms.single_sample.QPE.construct_circuit
#: qiskit.aqua.algorithms.single_sample.Shor.construct_circuit
msgid "戻り値の型"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.init_params:1
#: qiskit.aqua.algorithms.single_sample.QPE.init_params:1
#: qiskit.aqua.algorithms.single_sample.Shor.init_params:1
msgid "Initialize via parameters dictionary and algorithm input instance."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.init_params:3
#: qiskit.aqua.algorithms.single_sample.IQPE.init_params:3
#: qiskit.aqua.algorithms.single_sample.QPE.init_params:3
#: qiskit.aqua.algorithms.single_sample.Shor.init_params:3
msgid "parameters dictionary"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.IQPE.init_params:4
#: qiskit.aqua.algorithms.single_sample.QPE.init_params:4
msgid "EnergyInput instance"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.QPE:1
msgid "The Quantum Phase Estimation algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.QPE.construct_circuit:1
#: qiskit.aqua.algorithms.single_sample.Shor.construct_circuit:1
msgid "Construct circuit."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.QPE.construct_circuit:6
#: qiskit.aqua.algorithms.single_sample.Shor.construct_circuit:6
msgid "quantum circuit."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.AmplitudeEstimation:1
msgid "The Amplitude Estimation algorithm."
msgstr ""

#: of
#: qiskit.aqua.algorithms.single_sample.AmplitudeEstimation.construct_circuit:1
msgid "Construct the Amplitude Estimation quantum circuit."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.AmplitudeEstimation.init_params:1
msgid ""
"Initialize via parameters dictionary and algorithm input instance :param "
"params: parameters dictionary :param algo_input: Input instance"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Simon:1
msgid "The Simon algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.DeutschJozsa:1
msgid "The Deutsch-Jozsa algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.BernsteinVazirani:1
msgid "The Bernstein-Vazirani algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL:1
msgid "The HHL algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL:3
msgid ""
"The quantum circuit for this algorithm is returned by `generate_circuit`."
" Running the algorithm will execute the circuit and return the result "
"vector, measured (real hardware backend) or derived (qasm_simulator) via "
"state tomography or calculated from the statevector "
"(statevector_simulator)."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.construct_circuit:1
msgid "Construct the HHL circuit."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.construct_circuit:3
msgid "indicate whether measurement on ancillary qubit should be performed"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian:1
msgid ""
"Expand a non-hermitian matrix A to a hermitian matrix by [[0, A.H], [A, "
"0]] and expand vector b to [b.conj, b]."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian:4
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim:5
msgid "the input matrix"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian:6
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim:7
msgid "the input vector"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.expand_to_hermitian:9
#: qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim:10
msgid "the expanded matrix vector (np.array): the expanded vector"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.expand_to_powerdim:1
msgid ""
"Expand a matrix to the next-larger 2**n dimensional matrix with ones on "
"the diagonal and zeros on the off-diagonal and expand the vector with "
"zeros accordingly."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.init_params:1
msgid "Initialize via parameters dictionary and algorithm input instance"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.HHL.init_params:4
msgid "LinearSystemInput instance"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Shor:1
msgid "The Shor's Factoring algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Shor:3
msgid "Adapted from https://github.com/ttlion/ShorAlgQiskit"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.Shor.init_params:4
msgid "input instance"
msgstr ""

#: ../../autodoc/qiskit.aqua.algorithms.single_sample.rst:10
msgid "Subpackages"
msgstr ""

