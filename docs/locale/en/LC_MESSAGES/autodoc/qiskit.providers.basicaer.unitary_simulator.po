# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.providers.basicaer.unitary_simulator.rst:2
msgid "qiskit.providers.basicaer.unitary\\_simulator module"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator:1
msgid "Contains a Python simulator that returns the unitary of the circuit."
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator:3
msgid ""
"It simulates a unitary of a quantum circuit that has been compiled to run"
" on the simulator. It is exponential in the number of qubits."
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator:10
msgid ""
"Where the input is a Qobj object and the output is a BasicAerJob object, "
"which can later be queried for the Result object. The result will contain"
" a 'unitary' data field, which is a 2**n x 2**n complex numpy array "
"representing the circuit's unitary matrix."
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy:1
msgid "ベースクラス: :class:`qiskit.providers.basebackend.BaseBackend`"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy:1
msgid "Python implementation of a unitary simulator."
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run:1
msgid "Run qobj asynchronously."
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment
msgid "パラメータ"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run:3
msgid "payload of the experiment"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run:5
msgid "backend options"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment
msgid "戻り値"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run:8
msgid "derived from BaseJob"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment
msgid "戻り値の型"
msgstr ""

#: of qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run:11
msgid "Additional Information::"
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment:1
msgid "Run an experiment (circuit) and return a single experiment result."
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment:3
msgid "experiment from qobj experiments list"
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment:6
msgid ""
"A result dictionary which looks something like::      {     \"name\": "
"name of this experiment (obtained from qobj.experiment header)     "
"\"seed\": random seed used for simulation     \"shots\": number of shots "
"used in the simulation     \"data\":         {         \"unitary\": "
"[[[0.0, 0.0], [1.0, 0.0]],                     [[1.0, 0.0], [0.0, 0.0]]]"
"         },     \"status\": status string for the simulation     "
"\"success\": boolean     \"time taken\": simulation time of this single "
"experiment     }"
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment:8
msgid "A result dictionary which looks something like::"
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment
msgid "raises"
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment:25
msgid ""
":exc:`BasicAerError` -- if the number of qubits in the circuit is greater"
" than 24."
msgstr ""

#: of
#: qiskit.providers.basicaer.unitary_simulator.UnitarySimulatorPy.run_experiment:26
msgid "Note that the practical qubit limit is much lower than 24."
msgstr ""

