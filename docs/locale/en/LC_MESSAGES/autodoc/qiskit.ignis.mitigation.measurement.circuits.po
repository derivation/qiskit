# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.ignis.mitigation.measurement.circuits.rst:2
msgid "qiskit.ignis.mitigation.measurement.circuits module"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits:1
msgid ""
"Measurement calibration circuits. To apply the measurement mitigation use"
" the fitters to produce a filter."
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:1
msgid ""
"Return a list of measurement calibration circuits for the full Hilbert "
"space."
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:4
msgid "Each of the 2**n circuits creates a basis state"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal
#: qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal
msgid "パラメータ"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:6
msgid "A list of qubits to perform the measurement correction on,"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:9
#: qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:8
msgid "A quantum register. If none one is created"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:11
#: qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:10
msgid "A classical register. If none one is created"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:13
#: qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:12
msgid "A string to add to the front of circuit names for"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal
#: qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal
msgid "戻り値"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:16
msgid ""
"A list of QuantumCircuit objects containing the calibration circuits  A "
"list of calibration state labels"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:16
msgid "A list of QuantumCircuit objects containing the calibration circuits"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:18
msgid "A list of calibration state labels"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:25
#: qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:24
msgid "Additional Information:"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:21
msgid ""
"The returned circuits are named circlabel+cal_XXX where XXX is the basis "
"state, e.g., cal_1001"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.complete_meas_cal:25
msgid ""
"Pass the results of these circuits to the CompleteMeasurementFitter "
"constructor"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:1
msgid "Return a list of calibration circuits"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:3
msgid "Qubits to perform the"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:15
msgid ""
"A list of two QuantumCircuit objects containing the calibration circuits "
"mit_pattern"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:20
msgid ""
"The returned circuits are named circlabel+cal_XXX where XXX is the basis "
"state, e.g., cal_000 and cal_111"
msgstr ""

#: of qiskit.ignis.mitigation.measurement.circuits.tensored_meas_cal:24
msgid ""
"Pass the results of these circuits to the TensoredMeasurementFitter "
"constructor"
msgstr ""

