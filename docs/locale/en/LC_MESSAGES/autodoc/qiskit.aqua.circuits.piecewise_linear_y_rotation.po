# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.circuits.piecewise_linear_y_rotation.rst:2
msgid "qiskit.aqua.circuits.piecewise\\_linear\\_y\\_rotation module"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation:1
msgid "ベースクラス: :class:`qiskit.aqua.utils.circuit_factory.CircuitFactory`"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation:1
msgid ""
"Piecewise-linearly-controlled Y rotation. For a piecewise linear (not "
"necessarily continuous) function f(x), a state qubit register |x> and a "
"target qubit |0>, this operator acts as"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation:4
msgid "|x>|0> --> |x> ( cos( f(x) )|0> + sin( f(x) )|1> )"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation:6
msgid ""
"The function f(x) is defined through breakpoints, slopes and offsets as "
"follows. Suppose the breakpoints { x_0, ..., x_J } are a subset of [0,  "
"2^n-1], where n is the number of state qubits. Further on, denote the "
"corresponding slopes and offsets by a_j, b_j respectively. Then f(x) is "
"defined as:"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation:11
msgid ""
"x < x_0            --> f(x) = 0 x_j <= x < x_{j+1} --> f(x) = a_j * (x - "
"x_j) + b_j"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation:14
msgid "where we implicitly assume x_{J+1} = 2^n."
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.build:1
msgid "Adds corresponding sub-circuit to given circuit"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.build
msgid "パラメータ"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.build:3
msgid "quantum circuit"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.build:4
msgid "list of qubits (has to be same length as self._num_qubits)"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.build:5
msgid "list of ancilla qubits (or None if none needed)"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.build:6
msgid "parameters for circuit"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.evaluate:1
msgid ""
"Classically evaluate the piecewise linear rotation :param x: value to be "
"evaluated at :type x: float"
msgstr ""

#: of
#: qiskit.aqua.circuits.piecewise_linear_y_rotation.PiecewiseLinearYRotation.evaluate:5
msgid "Returns: value of piecewise linear function at x"
msgstr ""

