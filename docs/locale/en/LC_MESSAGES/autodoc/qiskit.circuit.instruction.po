# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.circuit.instruction.rst:2
msgid "qiskit.circuit.instruction module"
msgstr ""

#: of qiskit.circuit.instruction:1
msgid "A generic quantum instruction."
msgstr ""

#: of qiskit.circuit.instruction:3
msgid ""
"Instructions can be implementable on hardware (u, cx, etc.) or in "
"simulation (snapshot, noise, etc.)."
msgstr ""

#: of qiskit.circuit.instruction:6
msgid "Instructions can be unitary (a.k.a Gate) or non-unitary."
msgstr ""

#: of qiskit.circuit.instruction:8
msgid "Instructions are identified by the following:"
msgstr ""

#: of qiskit.circuit.instruction:11
msgid "name: A string to identify the type of instruction."
msgstr ""

#: of qiskit.circuit.instruction:11
msgid ""
"Used to request a specific instruction on the backend, or in visualizing "
"circuits."
msgstr ""

#: of qiskit.circuit.instruction:13
msgid "num_qubits, num_clbits: dimensions of the instruction"
msgstr ""

#: of qiskit.circuit.instruction:15
msgid "params: List of parameters to specialize a specific intruction instance."
msgstr ""

#: of qiskit.circuit.instruction:17
msgid ""
"Instructions do not have any context about where they are in a circuit "
"(which qubits/clbits). The circuit itself keeps this context."
msgstr ""

#: of qiskit.circuit.instruction.Instruction:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.circuit.instruction.Instruction:1
msgid "Generic quantum instruction."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.assemble:1
msgid "Assemble a QasmQobjInstruction"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.c_if:1
msgid "Add classical control on register classical and value val."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy:1
msgid "shallow copy of the instruction."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy
msgid "パラメータ"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy:3
msgid ""
"name to be given to the copied circuit, if None then the name stays the "
"same"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy
#: qiskit.circuit.instruction.Instruction.inverse
#: qiskit.circuit.instruction.Instruction.mirror
msgid "戻り値"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy:7
msgid ""
"a shallow copy of the current instruction, with the name   updated if it "
"was provided"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy:9
msgid "a shallow copy of the current instruction, with the name"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy:10
msgid "updated if it was provided"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.copy
#: qiskit.circuit.instruction.Instruction.inverse
#: qiskit.circuit.instruction.Instruction.mirror
msgid "戻り値の型"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.definition:1
msgid "Return definition in terms of other basic gates."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.inverse:1
msgid "Invert this instruction."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.inverse:3
msgid ""
"If the instruction is composite (i.e. has a definition), then its "
"definition will be recursively inverted."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.inverse:6
msgid ""
"Special instructions inheriting from Instruction can implement their own "
"inverse (e.g. T and Tdg, Barrier, etc.)"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.inverse:9
msgid "a fresh instruction for the inverse"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.inverse
msgid "raises"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.inverse:12
msgid ""
":exc:`QiskitError` -- if the instruction is not composite and an inverse "
"has not been implemented for it."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.mirror:1
msgid "For a composite instruction, reverse the order of sub-gates."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.mirror:3
msgid ""
"This is done by recursively mirroring all sub-instructions. It does not "
"invert any gate."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.mirror:6
msgid "a fresh gate with sub-gates reversed"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.params:1
msgid "return instruction params"
msgstr ""

#: of qiskit.circuit.instruction.Instruction.qasm:1
msgid "Return a default OpenQASM string for the instruction."
msgstr ""

#: of qiskit.circuit.instruction.Instruction.qasm:3
msgid ""
"Derived instructions may override this to print in a different format "
"(e.g. measure q[0] -> c[0];)."
msgstr ""

