# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.components.uncertainty_problems.rst:2
msgid "qiskit.aqua.components.uncertainty\\_problems package"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.UncertaintyProblem:1
msgid ""
"ベースクラス: :class:`qiskit.aqua.utils.circuit_factory.CircuitFactory`, "
":class:`qiskit.aqua.pluggable.Pluggable`, :class:`abc.ABC`"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.UncertaintyProblem:1
msgid "The abstract Uncertainty Problem pluggable component."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta:1
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue:1
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue:1
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem:1
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem:1
msgid ""
"ベースクラス: "
":class:`qiskit.aqua.components.uncertainty_problems.uncertainty_problem.UncertaintyProblem`"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta:1
msgid "The European Call Option Delta."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta:3
msgid ""
"Evaluates the variance for a European call option given an uncertainty "
"model. The payoff function is f(S, K) = max(0, S - K) for a spot price S "
"and strike price K."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta.build:1
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue.build:1
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue.build:1
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem.build:1
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective.build:1
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem.build:1
msgid "Adds corresponding sub-circuit to given circuit"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta.build
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue.build
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue.build
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem.build
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective.build
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem.build
msgid "パラメータ"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta.build:3
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue.build:3
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue.build:3
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem.build:3
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective.build:3
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem.build:3
msgid "quantum circuit"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta.build:4
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue.build:4
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue.build:4
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem.build:4
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective.build:4
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem.build:4
msgid "list of qubits (has to be same length as self._num_qubits)"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta.build:5
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue.build:5
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue.build:5
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem.build:5
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective.build:5
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem.build:5
msgid "list of ancilla qubits (or None if none needed)"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallDelta.build:6
#: qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue.build:6
#: qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue.build:6
#: qiskit.aqua.components.uncertainty_problems.MultivariateProblem.build:6
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective.build:6
#: qiskit.aqua.components.uncertainty_problems.UnivariateProblem.build:6
msgid "parameters for circuit"
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue:1
msgid "The European Call Option Expected Value."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.EuropeanCallExpectedValue:3
msgid ""
"Evaluates the expected payoff for a European call option given an "
"uncertainty model. The payoff function is f(S, K) = max(0, S - K) for a "
"spot price S and strike price K."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue:1
msgid "The Fixed Income Expected Value."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.FixedIncomeExpectedValue:3
msgid "Evaluates a fixed income asset with uncertain interest rates."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.MultivariateProblem:1
msgid "Multivariate Uncertainty Problem."
msgstr ""

#: of qiskit.aqua.components.uncertainty_problems.UnivariateProblem:1
msgid "Univariate uncertainty problem."
msgstr ""

#: of
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective:1
msgid "ベースクラス: :class:`qiskit.aqua.utils.circuit_factory.CircuitFactory`"
msgstr ""

#: of
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective:1
msgid ""
"Univariate Piecewise Linear Objective Function, applies controlled "
"Y-rotation to target qubit. Control qubits represent integer value, and "
"rotation approximates a piecewise linear function of the amplitude f:"
msgstr ""

#: of
#: qiskit.aqua.components.uncertainty_problems.UnivariatePiecewiseLinearObjective:3
msgid "|x>|0> --> |x>( sqrt(1 - f(x))|0> + sqrt(f(x))|1> )"
msgstr ""

#: ../../autodoc/qiskit.aqua.components.uncertainty_problems.rst:10
msgid "Submodules"
msgstr ""

