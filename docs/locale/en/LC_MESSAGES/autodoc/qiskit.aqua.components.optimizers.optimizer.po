# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.components.optimizers.optimizer.rst:2
msgid "qiskit.aqua.components.optimizers.optimizer module"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer:1
msgid "Optimizer interface"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer:1
msgid "ベースクラス: :class:`qiskit.aqua.pluggable.Pluggable`"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer:1
msgid "Base class for optimization algorithm."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.SupportLevel:1
msgid "ベースクラス: :class:`enum.IntEnum`"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.SupportLevel:1
msgid "An enumeration."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.gradient_num_diff:1
msgid ""
"We compute the gradient with the numeric differentiation in the parallel "
"way, around the point x_center. :param x_center: point around which we "
"compute the gradient :type x_center: ndarray :param f: the function of "
"which the gradient is to be computed. :type f: func :param epsilon: the "
"epsilon used in the numeric differentiation. :type epsilon: float"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.gradient_num_diff
#: qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize
msgid "戻り値"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.gradient_num_diff:9
msgid "the gradient computed"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.gradient_num_diff
msgid "戻り値の型"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.init_params:1
msgid "Initialize with a params dictionary."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.init_params:3
msgid ""
"A dictionary of config params as per the configuration object. Some of "
"these params get passed to scipy optimizers in an options dictionary. We "
"can specify an options array of names in config dictionary to have the "
"options dictionary automatically populated. All other config items, "
"excluding name, will be passed to init_args"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.init_params
#: qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize
#: qiskit.aqua.components.optimizers.optimizer.Optimizer.set_options
msgid "パラメータ"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.init_params:8
msgid "configuration dict"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:1
msgid "Perform optimization."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:3
msgid "number of parameters to be optimized."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:5
msgid "handle to a function that computes the objective function."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:8
msgid ""
"handle to a function that computes the gradient of the objective "
"function, or None if not available."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:12
msgid ""
"list of variable bounds, given as pairs (lower, upper). None means "
"unbounded."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:16
msgid "initial point."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:19
msgid ""
"point, value, nfev    point: is a 1D numpy.ndarray[float] containing the "
"solution    value: is a float with the objective function value    nfev: "
"number of objective function calls made if available or None"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:23
msgid "point, value, nfev"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.optimize:22
msgid ""
"point: is a 1D numpy.ndarray[float] containing the solution value: is a "
"float with the objective function value nfev: number of objective "
"function calls made if available or None"
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.print_options:1
msgid "Print algorithm-specific options."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.set_options:1
msgid "Sets or updates values in the options dictionary."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.set_options:3
msgid ""
"The options dictionary may be used internally by a given optimizer to "
"pass additional optional values for the underlying optimizer/optimization"
" function used. The options dictionary may be initially populated with a "
"set of key/values when the given optimizer is constructed."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.set_options:8
msgid "options, given as name=value."
msgstr ""

#: of qiskit.aqua.components.optimizers.optimizer.Optimizer.wrap_function:1
msgid ""
"Wrap the function to implicitly inject the args at the call of the "
"function. :param function: the target function :type function: func "
":param args: the args to be injected :type args: tuple"
msgstr ""

