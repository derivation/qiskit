# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.quantum_info.operators.channel.chi.rst:2
msgid "qiskit.quantum\\_info.operators.channel.chi module"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:1
msgid "Chi-matrix representation of a Quantum Channel."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:4
msgid "This is the matrix χ such that:"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:6
msgid "E(ρ) = sum_{i, j} χ_{i,j} P_i.ρ.P_j^dagger"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:8
msgid ""
"where [P_i, i=0,...4^{n-1}] is the n-qubit Pauli basis in lexicographic "
"order."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:10
msgid "See [1] for further details."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:13
msgid "References"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:16
msgid ""
"[1] C.J. Wood, J.D. Biamonte, D.G. Cory, Quant. Inf. Comp. 15, 0579-0811 "
"(2015)"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi:15
msgid "Open access: arXiv:1111.6950 [quant-ph]"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi:1
msgid ""
"ベースクラス: "
":class:`qiskit.quantum_info.operators.channel.quantum_channel.QuantumChannel`"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi:1
msgid "Pauli basis Chi-matrix representation of a quantum channel"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi:3
msgid "The Chi-matrix is the Pauli-basis representation of the Chi-Matrix."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add:1
#: qiskit.quantum_info.operators.channel.chi.Chi.multiply:1
msgid "Return the QuantumChannel self + other."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add
#: qiskit.quantum_info.operators.channel.chi.Chi.compose
#: qiskit.quantum_info.operators.channel.chi.Chi.expand
#: qiskit.quantum_info.operators.channel.chi.Chi.multiply
#: qiskit.quantum_info.operators.channel.chi.Chi.power
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract
#: qiskit.quantum_info.operators.channel.chi.Chi.tensor
msgid "パラメータ"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add:3
#: qiskit.quantum_info.operators.channel.chi.Chi.compose:3
#: qiskit.quantum_info.operators.channel.chi.Chi.expand:3
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract:3
#: qiskit.quantum_info.operators.channel.chi.Chi.tensor:3
msgid "a quantum channel."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add
#: qiskit.quantum_info.operators.channel.chi.Chi.compose
#: qiskit.quantum_info.operators.channel.chi.Chi.expand
#: qiskit.quantum_info.operators.channel.chi.Chi.multiply
#: qiskit.quantum_info.operators.channel.chi.Chi.power
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract
#: qiskit.quantum_info.operators.channel.chi.Chi.tensor
msgid "戻り値"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add:6
msgid "the linear addition self + other as a Chi object."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add
#: qiskit.quantum_info.operators.channel.chi.Chi.compose
#: qiskit.quantum_info.operators.channel.chi.Chi.expand
#: qiskit.quantum_info.operators.channel.chi.Chi.multiply
#: qiskit.quantum_info.operators.channel.chi.Chi.power
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract
#: qiskit.quantum_info.operators.channel.chi.Chi.tensor
msgid "戻り値の型"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add
#: qiskit.quantum_info.operators.channel.chi.Chi.compose
#: qiskit.quantum_info.operators.channel.chi.Chi.expand
#: qiskit.quantum_info.operators.channel.chi.Chi.multiply
#: qiskit.quantum_info.operators.channel.chi.Chi.power
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract
#: qiskit.quantum_info.operators.channel.chi.Chi.tensor
msgid "raises"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add:9
#: qiskit.quantum_info.operators.channel.chi.Chi.compose:15
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract:9
msgid ":exc:`QiskitError` -- if other is not a QuantumChannel subclass, or"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.add:10
#: qiskit.quantum_info.operators.channel.chi.Chi.compose:16
#: qiskit.quantum_info.operators.channel.chi.Chi.subtract:10
msgid "has incompatible dimensions."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.compose:1
msgid "Return the composition channel self∘other."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.compose:5
msgid "a list of subsystem positions to compose other on."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.compose:7
msgid ""
"If False compose in standard order other(self(input)) otherwise compose "
"in reverse order self(other(input)) [default: False]"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.compose:12
msgid "The composition channel as a Chi object."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.conjugate:1
msgid "Return the conjugate of the QuantumChannel."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.expand:1
msgid "Return the tensor product channel other ⊗ self."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.expand:6
msgid "the tensor product channel other ⊗ self as a Chi object."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.expand:9
#: qiskit.quantum_info.operators.channel.chi.Chi.tensor:9
msgid ":exc:`QiskitError` -- if other is not a QuantumChannel subclass."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.multiply:3
msgid "a complex number."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.multiply:6
msgid "the scalar multiplication other * self as a Chi object."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.multiply:9
msgid ":exc:`QiskitError` -- if other is not a valid scalar."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.power:1
msgid "The matrix power of the channel."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.power:3
msgid "compute the matrix power of the superoperator matrix."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.power:6
msgid "the matrix power of the SuperOp converted to a Chi channel."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.power:9
msgid ":exc:`QiskitError` -- if the input and output dimensions of the"
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.power:10
msgid "QuantumChannel are not equal, or the power is not an integer."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.subtract:1
msgid "Return the QuantumChannel self - other."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.subtract:6
msgid "the linear subtraction self - other as Chi object."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.tensor:1
msgid "Return the tensor product channel self ⊗ other."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.tensor:6
msgid "the tensor product channel self ⊗ other as a Chi object."
msgstr ""

#: of qiskit.quantum_info.operators.channel.chi.Chi.transpose:1
msgid "Return the transpose of the QuantumChannel."
msgstr ""

