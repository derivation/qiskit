# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.parser.rst:2
msgid "qiskit.aqua.parser package"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema:1
msgid "JSON schema Utilities class."
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.allows_additional_properties:1
msgid ""
"Returns allows additional properties flag for a schema section :param "
"section_name: schema section :type section_name: string"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.add_section_properties
#: qiskit.aqua.parser.BaseParser.delete_section
#: qiskit.aqua.parser.BaseParser.delete_section_properties
#: qiskit.aqua.parser.BaseParser.delete_section_property
#: qiskit.aqua.parser.BaseParser.get_section
#: qiskit.aqua.parser.BaseParser.get_section_property
#: qiskit.aqua.parser.BaseParser.set_section
#: qiskit.aqua.parser.BaseParser.set_section_properties
#: qiskit.aqua.parser.BaseParser.set_section_property
#: qiskit.aqua.parser.JSONSchema.allows_additional_properties
#: qiskit.aqua.parser.JSONSchema.check_property_value
#: qiskit.aqua.parser.JSONSchema.check_section_value
#: qiskit.aqua.parser.JSONSchema.get_algorithm_problems
#: qiskit.aqua.parser.JSONSchema.get_property_default_value
#: qiskit.aqua.parser.JSONSchema.get_property_default_values
#: qiskit.aqua.parser.JSONSchema.get_property_types
#: qiskit.aqua.parser.JSONSchema.get_section_default_properties
#: qiskit.aqua.parser.JSONSchema.get_section_types
#: qiskit.aqua.parser.JSONSchema.get_value
#: qiskit.aqua.parser.JSONSchema.validate_property
msgid "戻り値"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.allows_additional_properties:5
msgid "Returns allows additional properties boolean value"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.check_property_value:1
msgid "Check value for property name"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.delete_section
#: qiskit.aqua.parser.BaseParser.delete_section_properties
#: qiskit.aqua.parser.BaseParser.delete_section_property
#: qiskit.aqua.parser.BaseParser.set_section
#: qiskit.aqua.parser.BaseParser.set_section_property
#: qiskit.aqua.parser.JSONSchema.check_property_value
#: qiskit.aqua.parser.JSONSchema.check_section_value
#: qiskit.aqua.parser.JSONSchema.get_property_default_value
#: qiskit.aqua.parser.JSONSchema.get_section_default_properties
#: qiskit.aqua.parser.JSONSchema.get_section_types
#: qiskit.aqua.parser.JSONSchema.update_pluggable_schemas
msgid "パラメータ"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.check_property_value:3
#: qiskit.aqua.parser.JSONSchema.check_section_value:3
msgid "section name"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.check_property_value:5
msgid "property name"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.check_property_value:7
#: qiskit.aqua.parser.JSONSchema.check_section_value:5
msgid "value"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.check_property_value:10
#: qiskit.aqua.parser.JSONSchema.check_section_value:8
msgid "Returns converted value if valid"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.check_section_value:1
msgid "Check value for section name"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.commit_changes:1
msgid "Saves changes to original json schema"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.copy_section_from_aqua_schema:1
msgid ""
"Copy a section from aqua json schema if if exists :param section_name: "
"schema section to copy :type section_name: string"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_algorithm_problems:1
msgid ""
"Get algorithm problem name list :param algo_name: algorithm name :type "
"algo_name: string"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_algorithm_problems:5
msgid "Returns list of problem names"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_default_section_names:1
msgid "Returns default section names"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_default_sections:1
msgid "Returns default sections"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_default_value:1
msgid "Returns default value for a schema section property"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_default_value:3
#: qiskit.aqua.parser.JSONSchema.get_section_default_properties:3
#: qiskit.aqua.parser.JSONSchema.get_section_types:3
msgid "schema section"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_default_value:5
msgid "schema section property"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_default_value:8
msgid "Returns dafault value"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_default_values:1
msgid ""
"Returns default values for a schema section property :param section_name:"
" schema section :type section_name: string :param property_name: schema "
"section property :type property_name: string"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_default_values:7
msgid "Returns dafault values list"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_types:1
msgid ""
"Returns types for a schema section property :param section_name: schema "
"section :type section_name: string :param property_name: schema section "
"property :type property_name: string"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_property_types:7
msgid "Returns schema type list"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_section_default_properties:1
msgid "Returns default properties for a schema section"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_section_default_properties:6
msgid "Returns properties  dictionary"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_section_types:1
msgid "Returns types for a schema section"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_section_types:6
msgid "Returns schema tyoe array"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_value:1
msgid ""
"Returns a converted value based on schema types :param value: value :type"
" value: obj :param type: schema types :type type: array"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.get_value:7
msgid "Returns converted value"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.original_schema:1
msgid "Returns original json schema"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.rollback_changes:1
msgid "Restores schema from original json schema"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.schema:1
msgid "Returns json schema"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.update_backend_schema:1
msgid "Updates backend schema"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.update_pluggable_schemas:1
msgid "Updates schemas of all pluggables"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.update_pluggable_schemas:3
msgid "input parser"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.validate_property:1
msgid ""
"Validates the propery and returns error message :param sections_json: "
"sesctions :type sections_json: dict :param section_name: section name "
":type section_name: string :param property_name: property name :type "
"property_name: string"
msgstr ""

#: of qiskit.aqua.parser.JSONSchema.validate_property:9
msgid "Returns error meessage or None"
msgstr ""

#: of qiskit.aqua.parser.BaseParser:1
msgid "ベースクラス: :class:`abc.ABC`"
msgstr ""

#: of qiskit.aqua.parser.BaseParser:1
msgid "Base Aqua Parser."
msgstr ""

#: of qiskit.aqua.parser.BaseParser.add_section_properties:1
msgid ""
"Add new properties if don't exist, update the existent ones, other "
"properties are unchanged :param section_name: the name of the section, "
"case insensitive :type section_name: str :param new_properties: property "
"name: value :type new_properties: dict"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.add_section_properties:7
#: qiskit.aqua.parser.BaseParser.set_section_properties:7
msgid "True if changed"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.add_section_properties
#: qiskit.aqua.parser.BaseParser.delete_section
#: qiskit.aqua.parser.BaseParser.delete_section_properties
#: qiskit.aqua.parser.BaseParser.delete_section_property
#: qiskit.aqua.parser.BaseParser.get_section
#: qiskit.aqua.parser.BaseParser.get_section_property
#: qiskit.aqua.parser.BaseParser.set_section
#: qiskit.aqua.parser.BaseParser.set_section_properties
#: qiskit.aqua.parser.BaseParser.set_section_property
msgid "戻り値の型"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.delete_section:1
#: qiskit.aqua.parser.BaseParser.delete_section_properties:1
#: qiskit.aqua.parser.BaseParser.delete_section_property:1
#: qiskit.aqua.parser.BaseParser.set_section:1
#: qiskit.aqua.parser.BaseParser.set_section_property:1
msgid "the name of the section, case insensitive"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.delete_section:4
#: qiskit.aqua.parser.BaseParser.delete_section_properties:4
#: qiskit.aqua.parser.BaseParser.delete_section_property:6
msgid "True if deleted"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.delete_section_property:3
msgid "the property name in the section"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_filename:1
msgid "Return the filename."
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section:1
msgid ""
"Return a Section by name. :param section_name: the name of the section, "
"case insensitive :type section_name: str"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section:5
msgid "The section with this name"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section
msgid "raises"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section:8
msgid ":exc:`AquaError` -- if the section does not exist."
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section_names:1
msgid "Return all the names of the sections."
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section_property:1
msgid ""
"Return a property by name. :param section_name: the name of the section, "
"case insensitive :type section_name: str :param property_name: the "
"property name in the section :type property_name: str :param "
"default_value: default value in case it is not found"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.get_section_property:8
msgid "The property value"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.is_modified:1
msgid "Returns true if data has been changed"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.json_schema:1
msgid "Getter of _json_schema."
msgstr ""

#: of qiskit.aqua.parser.BaseParser.parse:1
msgid "Parse the data."
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section:4
msgid "True if updated"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_data:1
msgid ""
"Sets a section data. :param section_name: the name of the section, case "
"insensitive :type section_name: str :param value: value to set"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_data:6
msgid "Returns:"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_data:7
msgid "Bool: True if updated"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_properties:1
msgid ""
"Replace all old properties with new ones :param section_name: the name of"
" the section, case insensitive :type section_name: str :param "
"new_properties: property name: value :type new_properties: dict"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_property:3
msgid "the name of the property"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_property:5
msgid "the value of the property"
msgstr ""

#: of qiskit.aqua.parser.BaseParser.set_section_property:8
msgid "True if value changed"
msgstr ""

#: ../../autodoc/qiskit.aqua.parser.rst:10
msgid "Submodules"
msgstr ""

