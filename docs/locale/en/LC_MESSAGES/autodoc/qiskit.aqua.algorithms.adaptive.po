# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.algorithms.adaptive.rst:2
msgid "qiskit.aqua.algorithms.adaptive package"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC:1
#: qiskit.aqua.algorithms.adaptive.VQE:1
msgid "ベースクラス: :class:`qiskit.aqua.algorithms.adaptive.vq_algorithm.VQAlgorithm`"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE:1
msgid "The Variational Quantum Eigensolver algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE:3
msgid "See https://arxiv.org/abs/1304.3061"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.construct_circuit:1
msgid "Generate the circuits."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA.init_params
#: qiskit.aqua.algorithms.adaptive.QGAN.set_generator
#: qiskit.aqua.algorithms.adaptive.VQC.construct_circuit
#: qiskit.aqua.algorithms.adaptive.VQC.predict
#: qiskit.aqua.algorithms.adaptive.VQC.test
#: qiskit.aqua.algorithms.adaptive.VQC.train
#: qiskit.aqua.algorithms.adaptive.VQE.construct_circuit
#: qiskit.aqua.algorithms.adaptive.VQE.init_params
msgid "パラメータ"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.construct_circuit:3
msgid "parameters for variational form."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.construct_circuit:5
msgid "backend object."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.construct_circuit:7
msgid ""
"is backend from AerProvider, if True and mode is paulis, single circuit "
"is generated."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.init_params
#: qiskit.aqua.algorithms.adaptive.VQAlgorithm.find_minimum
#: qiskit.aqua.algorithms.adaptive.VQC.construct_circuit
#: qiskit.aqua.algorithms.adaptive.VQC.predict
#: qiskit.aqua.algorithms.adaptive.VQC.test
#: qiskit.aqua.algorithms.adaptive.VQE.construct_circuit
#: qiskit.aqua.algorithms.adaptive.VQE.init_params
#: qiskit.aqua.algorithms.adaptive.VQE.print_settings
msgid "戻り値"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.construct_circuit:11
msgid "the generated circuits with Hamiltonian."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.init_params
#: qiskit.aqua.algorithms.adaptive.VQC.construct_circuit
#: qiskit.aqua.algorithms.adaptive.VQC.predict
#: qiskit.aqua.algorithms.adaptive.VQC.test
#: qiskit.aqua.algorithms.adaptive.VQE.construct_circuit
#: qiskit.aqua.algorithms.adaptive.VQE.init_params
#: qiskit.aqua.algorithms.adaptive.VQE.print_settings
msgid "戻り値の型"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.init_params:1
msgid "Initialize via parameters dictionary and algorithm input instance."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA.init_params:3
#: qiskit.aqua.algorithms.adaptive.VQE.init_params:3
msgid "parameters dictionary"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA.init_params:5
#: qiskit.aqua.algorithms.adaptive.VQE.init_params:5
msgid "EnergyInput instance"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.init_params:8
msgid "vqe object"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.print_settings:1
msgid "Preparing the setting of VQE into a string."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.print_settings:3
msgid "the formatted setting of VQE"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQE.setting:1
msgid "Prepare the setting of VQE as a string."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA:1
msgid "ベースクラス: :class:`qiskit.aqua.algorithms.adaptive.vqe.vqe.VQE`"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA:1
msgid "The Quantum Approximate Optimization Algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA:3
msgid "See https://arxiv.org/abs/1411.4028"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QAOA.init_params:1
msgid "Initialize via parameters dictionary and algorithm input instance"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN:1
#: qiskit.aqua.algorithms.adaptive.VQAlgorithm:1
msgid "ベースクラス: :class:`qiskit.aqua.algorithms.quantum_algorithm.QuantumAlgorithm`"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN:1
msgid "Quantum Generative Adversarial Network."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.init_params:1
msgid ""
"Initialize qGAN via parameters dictionary and algorithm input instance. "
":param params: parameters dictionary :param algo_input: Input instance"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.init_params:5
msgid "qgan object"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.set_discriminator:1
msgid "Initialize discriminator."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.set_discriminator:3
#: qiskit.aqua.algorithms.adaptive.QGAN.set_generator:7
msgid "Returns:"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.set_generator:1
msgid ""
"Initialize generator. :param generator_circuit: VariationalForm, "
"parametrized quantum circuit which sets the structure of the quantum"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.set_generator:3
msgid "generator"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.set_generator:4
msgid "array, initial parameters for the generator circuit"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.set_generator:5
msgid "Optimizer, optimizer to be used for the training of the generator"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.QGAN.train:1
msgid "Train the qGAN"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.construct_circuit:1
msgid "Construct circuit based on data and parameters in variational form."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.construct_circuit:3
msgid "1-D array with D dimension"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.construct_circuit:5
msgid "list of 1-D array, parameters sets for variational form"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.construct_circuit:7
msgid "flag to add measurement"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.construct_circuit:10
msgid "the circuit"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.predict:1
msgid "Predict the labels for the data."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.predict:3
msgid "NxD array, N is number of data, D is data dimension"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.predict:5
#: qiskit.aqua.algorithms.adaptive.VQC.test:7
#: qiskit.aqua.algorithms.adaptive.VQC.train:7
msgid "quantum backend with all setting"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.predict:7
#: qiskit.aqua.algorithms.adaptive.VQC.test:9
#: qiskit.aqua.algorithms.adaptive.VQC.train:9
msgid "the size of each minibatched accuracy evalutation"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.predict:9
#: qiskit.aqua.algorithms.adaptive.VQC.test:11
msgid "list of parameters to populate in the variational form"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.predict:12
msgid ""
"for each data point, generates the predicted probability for each class "
"list: for each data point, generates the predicted label (that with the "
"highest prob)"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.test:1
msgid ""
"Predict the labels for the data, and test against with ground truth "
"labels."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.test:3
msgid "NxD array, N is number of data and D is data dimension"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.test:5
#: qiskit.aqua.algorithms.adaptive.VQC.train:5
msgid "Nx1 array, N is number of data"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.test:14
msgid "classification accuracy"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.train:1
msgid "Train the models, and save results."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQC.train:3
msgid "NxD array, N is number of data and D is dimension"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQAlgorithm:1
msgid "The Variational Quantum Algorithm Base Class."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQAlgorithm.find_minimum:1
msgid "Optimize to find the minimum cost value."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQAlgorithm.find_minimum:3
msgid "Optimized variational parameters, and corresponding minimum cost value."
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQAlgorithm.find_minimum
msgid "raises"
msgstr ""

#: of qiskit.aqua.algorithms.adaptive.VQAlgorithm.find_minimum:5
msgid ":exc:`ValueError`"
msgstr ""

#: ../../autodoc/qiskit.aqua.algorithms.adaptive.rst:10
msgid "Subpackages"
msgstr ""

#: ../../autodoc/qiskit.aqua.algorithms.adaptive.rst:20
msgid "Submodules"
msgstr ""

