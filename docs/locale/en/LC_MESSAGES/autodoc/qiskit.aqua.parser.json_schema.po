# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.parser.json_schema.rst:2
msgid "qiskit.aqua.parser.json\\_schema module"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema:1
msgid "JSON schema Utilities class."
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.allows_additional_properties:1
msgid ""
"Returns allows additional properties flag for a schema section :param "
"section_name: schema section :type section_name: string"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.allows_additional_properties
#: qiskit.aqua.parser.json_schema.JSONSchema.check_property_value
#: qiskit.aqua.parser.json_schema.JSONSchema.check_section_value
#: qiskit.aqua.parser.json_schema.JSONSchema.get_algorithm_problems
#: qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_value
#: qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_values
#: qiskit.aqua.parser.json_schema.JSONSchema.get_property_types
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_default_properties
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_types
#: qiskit.aqua.parser.json_schema.JSONSchema.get_value
#: qiskit.aqua.parser.json_schema.JSONSchema.validate_property
msgid "戻り値"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.allows_additional_properties:5
msgid "Returns allows additional properties boolean value"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_property_value:1
msgid "Check value for property name"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_property_value
#: qiskit.aqua.parser.json_schema.JSONSchema.check_section_value
#: qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_value
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_default_properties
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_types
#: qiskit.aqua.parser.json_schema.JSONSchema.update_pluggable_schemas
msgid "パラメータ"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_property_value:3
#: qiskit.aqua.parser.json_schema.JSONSchema.check_section_value:3
msgid "section name"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_property_value:5
msgid "property name"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_property_value:7
#: qiskit.aqua.parser.json_schema.JSONSchema.check_section_value:5
msgid "value"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_property_value:10
#: qiskit.aqua.parser.json_schema.JSONSchema.check_section_value:8
msgid "Returns converted value if valid"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.check_section_value:1
msgid "Check value for section name"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.commit_changes:1
msgid "Saves changes to original json schema"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.copy_section_from_aqua_schema:1
msgid ""
"Copy a section from aqua json schema if if exists :param section_name: "
"schema section to copy :type section_name: string"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_algorithm_problems:1
msgid ""
"Get algorithm problem name list :param algo_name: algorithm name :type "
"algo_name: string"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_algorithm_problems:5
msgid "Returns list of problem names"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_default_section_names:1
msgid "Returns default section names"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_default_sections:1
msgid "Returns default sections"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_value:1
msgid "Returns default value for a schema section property"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_value:3
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_default_properties:3
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_types:3
msgid "schema section"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_value:5
msgid "schema section property"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_value:8
msgid "Returns dafault value"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_values:1
msgid ""
"Returns default values for a schema section property :param section_name:"
" schema section :type section_name: string :param property_name: schema "
"section property :type property_name: string"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_default_values:7
msgid "Returns dafault values list"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_types:1
msgid ""
"Returns types for a schema section property :param section_name: schema "
"section :type section_name: string :param property_name: schema section "
"property :type property_name: string"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_property_types:7
msgid "Returns schema type list"
msgstr ""

#: of
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_default_properties:1
msgid "Returns default properties for a schema section"
msgstr ""

#: of
#: qiskit.aqua.parser.json_schema.JSONSchema.get_section_default_properties:6
msgid "Returns properties  dictionary"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_section_types:1
msgid "Returns types for a schema section"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_section_types:6
msgid "Returns schema tyoe array"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_value:1
msgid ""
"Returns a converted value based on schema types :param value: value :type"
" value: obj :param type: schema types :type type: array"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.get_value:7
msgid "Returns converted value"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.original_schema:1
msgid "Returns original json schema"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.rollback_changes:1
msgid "Restores schema from original json schema"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.schema:1
msgid "Returns json schema"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.update_backend_schema:1
msgid "Updates backend schema"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.update_pluggable_schemas:1
msgid "Updates schemas of all pluggables"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.update_pluggable_schemas:3
msgid "input parser"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.validate_property:1
msgid ""
"Validates the propery and returns error message :param sections_json: "
"sesctions :type sections_json: dict :param section_name: section name "
":type section_name: string :param property_name: property name :type "
"property_name: string"
msgstr ""

#: of qiskit.aqua.parser.json_schema.JSONSchema.validate_property:9
msgid "Returns error meessage or None"
msgstr ""

