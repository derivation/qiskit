# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.aqua.algorithms.single_sample.hhl.hhl.rst:2
msgid "qiskit.aqua.algorithms.single\\_sample.hhl.hhl module"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl:1
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL:1
msgid "The HHL algorithm."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL:1
msgid "ベースクラス: :class:`qiskit.aqua.algorithms.quantum_algorithm.QuantumAlgorithm`"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL:3
msgid ""
"The quantum circuit for this algorithm is returned by `generate_circuit`."
" Running the algorithm will execute the circuit and return the result "
"vector, measured (real hardware backend) or derived (qasm_simulator) via "
"state tomography or calculated from the statevector "
"(statevector_simulator)."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.construct_circuit:1
msgid "Construct the HHL circuit."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.construct_circuit
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.init_params
msgid "パラメータ"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.construct_circuit:3
msgid "indicate whether measurement on ancillary qubit should be performed"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.construct_circuit
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim
msgid "戻り値"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.construct_circuit:7
msgid "the QuantumCircuit object for the constructed circuit"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian:1
msgid ""
"Expand a non-hermitian matrix A to a hermitian matrix by [[0, A.H], [A, "
"0]] and expand vector b to [b.conj, b]."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian:4
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim:5
msgid "the input matrix"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian:6
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim:7
msgid "the input vector"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian:9
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim:10
msgid "the expanded matrix vector (np.array): the expanded vector"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_hermitian
#: qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim
msgid "戻り値の型"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.expand_to_powerdim:1
msgid ""
"Expand a matrix to the next-larger 2**n dimensional matrix with ones on "
"the diagonal and zeros on the off-diagonal and expand the vector with "
"zeros accordingly."
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.init_params:1
msgid "Initialize via parameters dictionary and algorithm input instance"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.init_params:3
msgid "parameters dictionary"
msgstr ""

#: of qiskit.aqua.algorithms.single_sample.hhl.hhl.HHL.init_params:4
msgid "LinearSystemInput instance"
msgstr ""

