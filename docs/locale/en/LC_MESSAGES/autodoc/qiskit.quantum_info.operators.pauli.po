# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../autodoc/qiskit.quantum_info.operators.pauli.rst:2
msgid "qiskit.quantum\\_info.operators.pauli module"
msgstr ""

#: of qiskit.quantum_info.operators.pauli:1
msgid "Tools for working with Pauli Operators."
msgstr ""

#: of qiskit.quantum_info.operators.pauli:3
msgid "A simple pauli class and some tools."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:1
msgid "ベースクラス: :class:`object`"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:1
msgid "A simple class representing Pauli Operators."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:3
msgid ""
"The form is P_zx = (-i)^dot(z,x) Z^z X^x where z and x are elements of "
"Z_2^n. That is, there are 4^n elements (no phases in this group)."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:6
msgid ""
"For example, for 1 qubit P_00 = Z^0 X^0 = I P_01 = X P_10 = Z P_11 = -iZX"
" = (-i) iY = Y"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:12
msgid ""
"The overload __mul__ does not track the sign: P1*P2 = Z^(z1+z2) X^(x1+x2)"
" but sgn_prod does __mul__ and track the phase: P1*P2 = "
"(-i)^dot(z1+z2,x1+x2) Z^(z1+z2) X^(x1+x2) where the sums are taken modulo"
" 2."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:16
msgid "Pauli vectors z and x are supposed to be defined as boolean numpy arrays."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli:18
msgid ""
"Ref. Jeroen Dehaene and Bart De Moor Clifford group, stabilizer states, "
"and linear and quadratic operations over GF(2) Phys. Rev. A 68, 042318 – "
"Published 20 October 2003"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis:1
msgid "Append pauli at the end."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.delete_qubits
#: qiskit.quantum_info.operators.pauli.Pauli.from_label
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.kron
#: qiskit.quantum_info.operators.pauli.Pauli.pauli_single
#: qiskit.quantum_info.operators.pauli.Pauli.random
#: qiskit.quantum_info.operators.pauli.Pauli.sgn_prod
#: qiskit.quantum_info.operators.pauli.Pauli.update_x
#: qiskit.quantum_info.operators.pauli.Pauli.update_z
#: qiskit.quantum_info.operators.pauli.pauli_group
msgid "パラメータ"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis:3
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:7
msgid "the to-be-inserted or appended pauli"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis:5
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:9
msgid "the to-be-inserted or appended pauli label"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.delete_qubits
#: qiskit.quantum_info.operators.pauli.Pauli.from_label
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.kron
#: qiskit.quantum_info.operators.pauli.Pauli.pauli_single
#: qiskit.quantum_info.operators.pauli.Pauli.random
#: qiskit.quantum_info.operators.pauli.Pauli.sgn_prod
#: qiskit.quantum_info.operators.pauli.Pauli.to_label
#: qiskit.quantum_info.operators.pauli.Pauli.to_matrix
#: qiskit.quantum_info.operators.pauli.Pauli.to_spmatrix
#: qiskit.quantum_info.operators.pauli.Pauli.update_x
#: qiskit.quantum_info.operators.pauli.Pauli.update_z
#: qiskit.quantum_info.operators.pauli.pauli_group
msgid "戻り値"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis:8
#: qiskit.quantum_info.operators.pauli.Pauli.delete_qubits:6
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:19
#: qiskit.quantum_info.operators.pauli.Pauli.kron:8
#: qiskit.quantum_info.operators.pauli.Pauli.update_x:8
#: qiskit.quantum_info.operators.pauli.Pauli.update_z:8
msgid "self"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.append_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.delete_qubits
#: qiskit.quantum_info.operators.pauli.Pauli.from_label
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.kron
#: qiskit.quantum_info.operators.pauli.Pauli.pauli_single
#: qiskit.quantum_info.operators.pauli.Pauli.random
#: qiskit.quantum_info.operators.pauli.Pauli.sgn_prod
#: qiskit.quantum_info.operators.pauli.Pauli.to_label
#: qiskit.quantum_info.operators.pauli.Pauli.to_matrix
#: qiskit.quantum_info.operators.pauli.Pauli.to_spmatrix
#: qiskit.quantum_info.operators.pauli.Pauli.update_x
#: qiskit.quantum_info.operators.pauli.Pauli.update_z
#: qiskit.quantum_info.operators.pauli.pauli_group
msgid "戻り値の型"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.delete_qubits:1
msgid "Delete pauli at the indices."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.delete_qubits:3
msgid "the indices of to-be-deleted paulis"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.from_label:1
msgid "Take pauli string to construct pauli."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.from_label:3
msgid ""
"The qubit index of pauli label is q_{n-1} ... q_0. E.g., a pauli is "
"$P_{n-1} \\otimes ... \\otimes P_0$"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.from_label:6
#: qiskit.quantum_info.operators.pauli.Pauli.to_label:5
msgid "pauli label"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.from_label:9
msgid "the constructed pauli"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.from_label
#: qiskit.quantum_info.operators.pauli.Pauli.insert_paulis
#: qiskit.quantum_info.operators.pauli.Pauli.update_x
#: qiskit.quantum_info.operators.pauli.Pauli.update_z
#: qiskit.quantum_info.operators.pauli.pauli_group
msgid "raises"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.from_label:12
msgid ":exc:`QiskitError` -- invalid character in the label"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:1
msgid "Insert or append pauli to the targeted indices."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:3
msgid "If indices is None, it means append at the end."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:5
msgid "the qubit indices to be inserted"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:14
msgid ""
"the indices refers to the localion of original paulis, e.g. if indices = "
"[0, 2], pauli_labels = ['Z', 'I'] and original pauli = 'ZYXI' the pauli "
"will be updated to ZY'I'XI'Z' 'Z' and 'I' are inserted before the qubit "
"at 0 and 2."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.insert_paulis:22
msgid ""
":exc:`QiskitError` -- provide both `paulis` and `pauli_labels` at the "
"same time"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.kron:1
msgid "Kron product of two paulis."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.kron:3
msgid "Order is $P_2 (other) \\otimes P_1 (self)$"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.kron:5
msgid "P2"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.numberofqubits:1
msgid "Number of qubits."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.pauli_single:1
msgid ""
"Generate single qubit pauli at index with pauli_label with length "
"num_qubits."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.pauli_single:3
msgid "the length of pauli"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.pauli_single:5
msgid "the qubit index to insert the single qubii"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.pauli_single:7
msgid "pauli"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.pauli_single:10
msgid "single qubit pauli"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.random:1
msgid "Return a random Pauli on number of qubits."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.random:3
msgid "the number of qubits"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.random:5
msgid "Optional. To set a random seed."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.random:8
msgid "the random pauli"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.sgn_prod:1
msgid "Multiply two Paulis and track the phase."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.sgn_prod:3
msgid "$P_3 = P_1 \\otimes P_2$: X*Y"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.sgn_prod:5
msgid "pauli 1"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.sgn_prod:7
msgid "pauli 2"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.sgn_prod:10
msgid ""
"the multiplied pauli complex: the sign of the multiplication, 1, -1, 1j "
"or -1j"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_instruction:1
msgid "Convert to Pauli circuit instruction."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_label:1
msgid "Present the pauli labels in I, X, Y, Z format."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_label:3
msgid "Order is $q_{n-1} .... q_0$"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_matrix:1
msgid "Convert Pauli to a matrix representation."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_matrix:3
#: qiskit.quantum_info.operators.pauli.Pauli.to_spmatrix:3
msgid "Order is q_{n-1} .... q_0, i.e., $P_{n-1} \\otimes ... P_0$"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_matrix:5
msgid "a matrix that represents the pauli."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_operator:1
msgid "Convert to Operator object."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_spmatrix:1
msgid "Convert Pauli to a sparse matrix representation (CSR format)."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.to_spmatrix:5
msgid "a sparse matrix with CSR format that represnets the pauli."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_x:1
msgid "Update partial or entire x."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_x:3
msgid "to-be-updated x"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_x:5
#: qiskit.quantum_info.operators.pauli.Pauli.update_z:5
msgid "to-be-updated qubit indices"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_x:11
msgid ""
":exc:`QiskitError` -- when updating whole x, the number of qubits must be"
" the same."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_z:1
msgid "Update partial or entire z."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_z:3
msgid "to-be-updated z"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.update_z:11
msgid ""
":exc:`QiskitError` -- when updating whole z, the number of qubits must be"
" the same."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.x:1
msgid "Getter of x."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.Pauli.z:1
msgid "Getter of z."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:1
msgid "Return the Pauli group with 4^n elements."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:3
msgid ""
"The phases have been removed. case 'weight' is ordered by Pauli weights "
"and case 'tensor' is ordered by I,X,Y,Z counting lowest qubit fastest."
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:7
msgid "number of qubits"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:9
msgid "determines ordering of group elements ('weight' or 'tensor')"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:12
msgid "list of Pauli objects"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:15
msgid ":exc:`QiskitError` -- case is not 'weight' or 'tensor'"
msgstr ""

#: of qiskit.quantum_info.operators.pauli.pauli_group:16
msgid ":exc:`QiskitError` -- number_of_qubits is larger than 4"
msgstr ""

