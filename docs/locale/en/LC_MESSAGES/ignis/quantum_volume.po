# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../ignis/quantum_volume.rst:3
msgid "Quantum Volume"
msgstr ""

#: ../../ignis/quantum_volume.rst:5
msgid ""
"Quantum volume (QV) is a method to provide a holistic device benchmark as"
" described in \"Validating quantum computers using randomized model "
"circuits\" (https://arxiv.org/abs/1811.12926). The basic idea is to "
"generate many random sequences, run them on a device and see if the "
"results pass an outcome threshold."
msgstr ""

#: ../../ignis/quantum_volume.rst:11
msgid "To use the Qiskit Ignis quantum volume (QV) module, import it with"
msgstr ""

#: ../../ignis/quantum_volume.rst:18
msgid "Generating QV Sequences"
msgstr ""

#: ../../ignis/quantum_volume.rst:20
msgid ""
"In order to generate the QV sequences ``qv_circs``, which is a list of "
"lists of quantum volume circuits, run"
msgstr ""

#: ../../ignis/quantum_volume.rst:31
msgid "The parameters given to this function are:"
msgstr ""

#: ../../ignis/quantum_volume.rst:33
msgid ""
"``qubit_lists``: list of list of qubit subsets to generate volume "
"circuits for (each volume circuit will be depth equal to the number of "
"qubits in the subset)"
msgstr ""

#: ../../ignis/quantum_volume.rst:35
msgid "``ntrials``: Number of random circuits to create for each subset"
msgstr ""

#: ../../ignis/quantum_volume.rst:36
msgid "``qr``: QuantumRegister"
msgstr ""

#: ../../ignis/quantum_volume.rst:37
msgid "``cr``: ClassicalRegister"
msgstr ""

#: ../../ignis/quantum_volume.rst:39
msgid "This function returns:"
msgstr ""

#: ../../ignis/quantum_volume.rst:41
msgid ""
"``qv_circs``: a list of lists of circuits for the QV sequences (separate "
"list for each trial)"
msgstr ""

#: ../../ignis/quantum_volume.rst:43
msgid ""
"``qv_circs_nomeas``: the same circuits with no ``measure`` operations. "
"These are for passing to the statevector simulator (the QV algorithm "
"requires this)"
msgstr ""

#: ../../ignis/quantum_volume.rst:48
msgid "Analyzing Results"
msgstr ""

#: ../../ignis/quantum_volume.rst:50
msgid ""
"The first step is to execute the circuits on an ideal statevector "
"simulator."
msgstr ""

#: ../../ignis/quantum_volume.rst:60
msgid ""
"Next, you can execute the qv circuit either using Qiskit Aer Simulator "
"(with some noise model) or using IBMQ provider, and obtain a list of "
"results ``result_list`` for the QV sequences."
msgstr ""

#: ../../ignis/quantum_volume.rst:77
msgid "To analyze the results we add to a quantum volume fitter"
msgstr ""

#: ../../ignis/quantum_volume.rst:85
msgid "Results can be added to an existing fitter as"
msgstr ""

#: ../../ignis/quantum_volume.rst:91
msgid ""
"The number of trials in the fitter is based on the number of added "
"results. To compute the data run:"
msgstr ""

#: ../../ignis/quantum_volume.rst:99
msgid ""
"These steps are performed automatically when data is added (unless "
"``rerun_fit`` is set to ``False`` in ``add_data()``)."
msgstr ""

#: ../../ignis/quantum_volume.rst:102
msgid "The quantum volume success or failure is given as:"
msgstr ""

#: ../../ignis/quantum_volume.rst:108
msgid ""
"which for each subset of qubits returns whether the mean heavy output of "
"the circuits are greater than 2/3 with a confidence greater than 0.975 "
"(as defined in the paper)."
msgstr ""

