# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-12 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../terra/backend_monitoring_tools.rst:5
msgid "Tools for Monitoring Backends and Jobs"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:7
msgid ""
"In this section, we will learn how to monitor the status of jobs "
"submitted to devices and simulators (collectively called backends), as "
"well as discover how to easily query backend details and view the "
"collective state of all the backends available to you."
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:13
msgid "Loading the Monitoring Tools"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:15
msgid ""
"First, let us load the default qiskit routines, and register our IBMQ "
"credentials."
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:23
msgid "Functions for monitoring jobs and backends are here:"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:30
msgid "Tracking Job Status"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:32
msgid ""
"Many times a job(s) submitted to the IBM Q network can take a long time "
"to process, e.g. jobs with many circuits and/or shots, or may have to "
"wait in queue for other users. In situations such as these, it is "
"beneficial to have a way of monitoring the progress of a job, or several "
"jobs at once. As of Qiskit ``0.6+`` it is possible to monitor the status "
"of a job in a Jupyter notebook, and also in a Python script (version "
"``0.7+``)."
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:40
msgid "Lets see how to make use of these tools."
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:43
msgid "Monitoring the status of a single job"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:45
msgid ""
"Lets build a simple Bell circuit, submit it to a device, and then monitor"
" its status."
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:58
msgid "Lets grab the least busy backend"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:75
msgid ""
"Monitor the job using ``job_monitor`` in blocking-mode (i.e. using the "
"same thread as the Python interpreter)"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:89
msgid ""
"It is also possible to monitor the job using ``job_monitor`` in async-"
"mode (Jupyter notebooks only). The job will be monitored in a separate "
"thread, allowing you to continue to work in the notebook. For details "
"see: `Jupyter tools for Monitoring jobs and backends "
"<../../../../../qiskit-"
"tutorials/blob/master/qiskit/jupyter/jupyter_backend_tools.ipynb>`__"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:96
msgid "Changing the interval of status updating"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:98
msgid ""
"By default, the interval at which the job status is checked is every two "
"seconds. However, the user is free to change this using the ``interval`` "
"keyword argument in ``job_monitor``"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:114
msgid "Backend Details"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:116
msgid ""
"So far we have been executing our jobs on a backend, but we have explored"
" the backends in any detail. For example, we have found the least busy "
"backend, but do not know if this is the best backend with respect to gate"
" errors, topology etc. It is possible to get detailed information for a "
"single backend by calling ``backend_monitor``:"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:195
msgid ""
"Or, if we are interested in a higher-level view of all the backends "
"available to us, then we can use ``backend_overview()``"
msgstr ""

#: ../../terra/backend_monitoring_tools.rst:218
msgid ""
"There are also Jupyter magic equivalents that give more detailed "
"information, as demonstrated here: `Jupyter tools for Monitoring jobs and"
" backends <../../../../../qiskit-"
"tutorials/blob/master/qiskit/jupyter/jupyter_backend_tools.ipynb>`__"
msgstr ""

